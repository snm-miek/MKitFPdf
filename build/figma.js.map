{"version":3,"file":"figma.js","mappings":";;;;;;;;;;AAAY;;AAEZ,kBAAkB;AAClB,mBAAmB;AACnB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,UAAU;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACrJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ,eAAe,mBAAO,CAAC,oDAAW;AAClC,gBAAgB,mBAAO,CAAC,gDAAS;AACjC;AACA;AACA;AACA;;AAEA,cAAc;AACd,kBAAkB;AAClB,yBAAyB;;AAEzB;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;;AAEA;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,eAAe;AACxC;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,yBAAyB,QAAQ;AACjC;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,qBAAqB,WAAW,GAAG,IAAI;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,gBAAgB,WAAW,GAAG,IAAI,KAAK,aAAa;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;;AAEA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,KAAK,mDAAmD,cAAc;AACzF,GAAG;AACH;AACA;AACA,+BAA+B,IAAI;AACnC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAM,aAAa,SAAS;AACtD;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,SAAS,gBAAgB;AACzB,cAAc,oBAAoB,EAAE,IAAI;AACxC;AACA,YAAY,gBAAgB,EAAE,IAAI;AAClC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,GAAG,SAAS,GAAG,KAAK,qBAAqB,EAAE,EAAE;AACpE,QAAQ;AACR,yBAAyB,GAAG,KAAK,yBAAyB,EAAE,EAAE;AAC9D,mBAAmB,yBAAyB,EAAE,EAAE;AAChD;AACA,MAAM;AACN,oBAAoB,IAAI,EAAE,GAAG,SAAS,IAAI,EAAE,EAAE;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C,cAAc,SAAS,OAAO;AACxE;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,YAAY;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACzjEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS,WAAW;;AAEpB;AACA;AACA;AACA,SAAS,WAAW;;AAEpB;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA,SAAS,WAAW;;AAEpB;AACA;AACA,SAAS,UAAU;;AAEnB;AACA;;;;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,+CAA+C;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+BAA+B,MAAM;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;;;;;;;;;;;;;;ACxDA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACqC;AACrC;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,8DAA8D,iBAAiB;AAC/E;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+CAAI;AACZ,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,IAAC;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+CAAI;AACZ,KAAK;AACL;AACA,6CAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+CAAI;AACZ,KAAK;AACL,CAAC;AACD,6CAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+CAAI;AACZ,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+CAAI;AACZ,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA,6CAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD,6CAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,+CAAI,4BAA4B,WAAW;AAC/C,CAAC;AACD;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,6CAAE;AACF;AACA;AACA;AACA;AACA;AACA,wBAAwB,+CAAI;AAC5B;AACA;AACA,wBAAwB,+CAAI;AAC5B;AACA;AACA,wBAAwB,+CAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+CAAI;AAC5B,qBAAqB;AACrB;AACA;AACA,oBAAoB,+CAAI;AACxB;AACA;AACA;AACA;AACA,YAAY,+CAAI,kBAAkB,4BAA4B;AAC9D;AACA,KAAK;AACL,CAAC;;;;;;;;;;;;;;;;;ACxnB4B;AAC7B;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB,EAAE,mDAAM;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1BsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,qBAAqB,+DAAY;AACjC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACf6B;AAC7B;AACA,yCAAyC,kBAAkB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA,eAAe,mDAAM;AACrB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtB6E;AAC7E;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,0FAAyB;AACpC;;;;;;;;;;;;;;;;ACRA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACtJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,kBAAkB,UAAU;AAC5B;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC3FA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;;AC/BA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACiG;AACR;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,mCAAmC,sGAA+B;AAClE,eAAe,8GAAmC;AAClD,KAAK;AACL;;;;;;;;;;;;;;;;;;ACvBA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACiG;AACN;AAC3F;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,mCAAmC,wGAAgC;AACnE,eAAe,8GAAmC;AAClD,KAAK;AACL;;;;;;;;;;;;;;;;ACtBA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;ACxBA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;;;;;;;;;;;;;;;;AC3BA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACyF;AACzF;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,eAAe,sGAA+B;AAC9C,KAAK;AACL;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACdA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACmF;AACI;AACJ;AACtB;AACnB;AACyB;AAC8B;AACE;AACI;AACR;AACE;AACnC;AACiC;AACnC;AAC8D;AACN;AACJ;AACa;AACxC;AACA;AAC/B;AACW;AACI;AACT;AACqB;AAChB;AACQ;AACqB;AACvB;AACE;AAC7B;AACE;AACwB;AACb;AACsB;AACI;AACV;AACQ;AACW;AACrB;AACU;AAC7B;AACW;AACkB;AACX;AAClB;AACM;AACW;AACP;AACE;AACE;AACuC;AAC1D;AACjB;;;;;;;;;;;;;;;;;ACtDvB;AACA;;;;;;;;;;;;;;;;;;ACDP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5CO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACNA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,gBAAgB,+BAA+B;AAC/C;AACA;AACA;AACA,iDAAiD,EAAE,gEAAY,KAAK,yBAAyB;AAC7F;AACA;AACA,iDAAiD,EAAE,gEAAY,KAAK,mBAAmB;AACvF;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,yFAAyF,sBAAsB,mBAAmB,IAAI,+EAA+E,6BAA6B,kBAAkB,qCAAqC,kBAAkB,+CAA+C,iBAAiB,YAAY,kDAAkD,eAAe,eAAe,WAAW,qBAAqB,GAAG,sEAAsE,iCAAiC,EAAE,4BAA4B,kBAAkB,2EAA2E,oBAAoB,2CAA2C,MAAM,OAAO,yCAAyC,2BAA2B,wBAAwB,MAAM,OAAO;AAC38B,qCAAqC,gBAAgB;AACrD,SAAS;AACT,KAAK;AACL;;;;;;;;;;;;;;;;;ACjDA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,gBAAgB,+BAA+B;AAC/C;AACA;AACA;AACA,iDAAiD,EAAE,gEAAY,KAAK,yBAAyB;AAC7F;AACA;AACA,iDAAiD,EAAE,gEAAY,KAAK,mBAAmB;AACvF;AACA;AACA;AACA,8CAA8C,kBAAkB;AAChE;AACA;AACA;AACA;AACA,uEAAuE;AACvE,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA,qDAAqD,EAAE,gEAAY,KAAK,mBAAmB;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,EAAE,gEAAY,KAAK,yBAAyB;AAC7F;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;ACpEA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC9B+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,IAAI,4DAAY;AAChB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;ACjBgF;AACpB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,iCAAiC,6FAAmB;AACpD,gBAAgB,gBAAgB;AAChC,6CAA6C,uBAAuB,eAAe;AACnF;AACA,uBAAuB,yEAAa;AACpC;AACA;AACA,6BAA6B,6FAAmB;AAChD,YAAY,gBAAgB;AAC5B;AACA,yCAAyC,uBAAuB,eAAe;AAC/E;;;;;;;;;;;;;;;;;ACvB4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sBAAsB,EAAE,yEAAkB;AAC1D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACbgD;AAChD;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,YAAY,4DAAY;AACxB;AACA;AACA;AACA,aAAa;AACb,wBAAwB,OAAO;AAC/B;AACA,aAAa;AACb;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,sDAAsD,GAAG;AACzD;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACZ6D;AAC7D;AACA;AACA;AACA;AACA;AACO;AACP,uBAAuB,yEAAa;AACpC;AACA;AACA;;;;;;;;;;;;;;;;;ACV6D;AAC7D;AACA;AACA;AACA;AACA;AACO;AACP,uBAAuB,yEAAa;AACpC;AACA;AACA;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClBA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB,GAAG,eAAe;AAChD;;;;;;;;;;;;;;;;;AC7DA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACdwG;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,+DAA+D,iBAAiB;AACvF,8DAA8D,EAAE,6FAAsB,WAAW,yCAAyC;AAC1I,IAAI,6FAAsB;AAC1B;AACA;;;;;;;;;;;;;;;;;ACjBwG;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,QAAQ,6FAAsB,SAAS;AACvC,+BAA+B;AAC/B;AACA;AACA,gCAAgC,6FAAsB;AACtD;AACA;AACA;AACA,IAAI,6FAAsB;AAC1B;AACA;;;;;;;;;;;;;;;;;ACpB6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,4BAA4B,yEAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACpB6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,2BAA2B,yEAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,6BAA6B,MAAM;AACnC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yEAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACxC6D;AACQ;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,uBAAuB,yEAAa;AACpC,QAAQ,iFAAe;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,yBAAyB,MAAM;AAC/B;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;AChCkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2DAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,2DAAc;AAC7B,KAAK;AACL;;;;;;;;;;;;;;;;;;;AC5ByE;AACZ;AACQ;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,uBAAuB,yEAAa;AACpC,QAAQ,iFAAe;AACvB;AACA;AACA;AACA,oDAAoD,IAAI;AACxD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,yDAAyD,IAAI;AAC7D;AACA,KAAK;AACL,WAAW,kFAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvCA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACrB2G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,wBAAwB,wDAAY,0BAA0B,kEAAsB;AACpF;AACA;AACA,QAAQ,yDAAa;AACrB,YAAY,+DAAmB;AAC/B;AACA,+DAA+D;AAC/D;AACA,4BAA4B;AAC5B;AACA;AACA;;;;;;;;;;;;;;;;;ACpBwF;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,gDAAgD,qBAAqB;AAC5E,wEAAwE,yDAAa;AACrF;AACA;AACA;AACA;AACA,6CAA6C,+DAAmB,GAAG,6DAAiB;AACpF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACtBO;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACLP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxBA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,cAAc,OAAO,EAAE,OAAO,EAAE,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACO;AACP,cAAc,OAAO,EAAE,OAAO,EAAE,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACO;AACP,cAAc,SAAS,EAAE,OAAO,EAAE,QAAQ;AAC1C;;;;;;;;;;;;;;;;AC3BA;AACA;AACA,8BAA8B,SAAS;AACvC;AACA;AACA;AACO;AACP;AACA;AACA;AACA,8CAA8C,SAAS;AACvD;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,mGAAmG,iBAAiB,GAAG,2BAA2B,0DAA0D,EAAE,yBAAyB,gDAAgD,SAAS,EAAE,SAAS;AAC3S,qDAAqD,cAAc,sFAAsF;AACzJ;;;;;;;;;;;;;;;;AClBA;AACA,2BAA2B,cAAc,EAAE,EAAE,GAAG,cAAc;AAC9D,2BAA2B,cAAc,EAAE,EAAE,IAAI,cAAc,EAAE,EAAE;AACnE,qCAAqC,cAAc;AACnD,oCAAoC,aAAa,KAAK,aAAa;;AAEpD,iCAAiC;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+CAA+C,iCAAiC;AAChF,gBAAgB,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,YAAY;AACnD;;AAEA,SAAS;AACT;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;;AAEe;AACf;;AAEA,0CAA0C;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ,gDAAgD,MAAM;AACtD;;AAEA,kDAAkD;AAClD,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;UCxEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACN+B;AACL;AAC1B;AACA;AACA;AACA;AACA,iCAAiC,qBAAqB,eAAe,aAAa,aAAa;AAC/F;AACA,MAAM;AACN;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mGAAmG,iBAAiB,GAAG,2BAA2B,0DAA0D,EAAE,yBAAyB,gDAAgD,SAAS,wCAAwC,WAAW,SAAS;AAC5V,qDAAqD,cAAc,mBAAmB;AACtF;AACA;AACA;AACA;AACA,CAAC;AACD,6CAAE;AACF;AACA,YAAY,gBAAgB;AAC5B;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW,eAAe,6BAA6B;AACtF;AACA;AACA,+BAA+B,WAAW,eAAe,6BAA6B;AACtF;AACA;AACA;AACA,iCAAiC,WAAW,MAAM,MAAM,eAAe,6BAA6B;AACpG;AACA;AACA;AACA,gCAAgC,WAAW,eAAe,6BAA6B;AACvF;AACA;AACA,gCAAgC,WAAW,eAAe,6BAA6B;AACvF;AACA;AACA;AACA,kCAAkC,WAAW,MAAM,MAAM,eAAe,6BAA6B;AACrG;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,uBAAuB","sources":["webpack://MkitFPdf/./node_modules/base64-js/index.js","webpack://MkitFPdf/./node_modules/buffer/index.js","webpack://MkitFPdf/./node_modules/ieee754/index.js","webpack://MkitFPdf/./node_modules/natural-compare-lite/index.js","webpack://MkitFPdf/./src/figma/app/PdfBuilder.ts","webpack://MkitFPdf/./src/utilities/color/convert-hex-color-to-rgb-color.ts","webpack://MkitFPdf/./src/utilities/color/convert-named-color-to-hex-color.ts","webpack://MkitFPdf/./src/utilities/color/convert-rgb-color-to-hex-color.ts","webpack://MkitFPdf/./src/utilities/color/is-valid-hex-color.ts","webpack://MkitFPdf/./src/utilities/color/private/named-colors.ts","webpack://MkitFPdf/./src/utilities/events.ts","webpack://MkitFPdf/./src/utilities/function/ensure-minimum-time.ts","webpack://MkitFPdf/./src/utilities/image/create-canvas-element-from-blob-async.ts","webpack://MkitFPdf/./src/utilities/image/create-canvas-element-from-bytes-async.ts","webpack://MkitFPdf/./src/utilities/image/create-canvas-element-from-image-element.ts","webpack://MkitFPdf/./src/utilities/image/create-image-element-from-blob-async.ts","webpack://MkitFPdf/./src/utilities/image/create-image-element-from-bytes-async.ts","webpack://MkitFPdf/./src/utilities/image/create-image-paint.ts","webpack://MkitFPdf/./src/utilities/image/read-bytes-from-canvas-element-async.ts","webpack://MkitFPdf/./src/utilities/index.ts","webpack://MkitFPdf/./src/utilities/mixed-values.ts","webpack://MkitFPdf/./src/utilities/monetization/document-use-count.ts","webpack://MkitFPdf/./src/utilities/monetization/gumroad/private/empty-license.ts","webpack://MkitFPdf/./src/utilities/monetization/gumroad/validate-gumroad-license-key-main-async.ts","webpack://MkitFPdf/./src/utilities/monetization/gumroad/validate-gumroad-license-key-ui-async.ts","webpack://MkitFPdf/./src/utilities/monetization/total-use-count.ts","webpack://MkitFPdf/./src/utilities/node/absolute-position/get-absolute-position.ts","webpack://MkitFPdf/./src/utilities/node/absolute-position/set-absolute-position.ts","webpack://MkitFPdf/./src/utilities/node/collapse-layer.ts","webpack://MkitFPdf/./src/utilities/node/compute-bounding-box.ts","webpack://MkitFPdf/./src/utilities/node/compute-maximum-bounds.ts","webpack://MkitFPdf/./src/utilities/node/deduplicate-nodes.ts","webpack://MkitFPdf/./src/utilities/node/get-nodes/get-document-components.ts","webpack://MkitFPdf/./src/utilities/node/get-nodes/get-parent-node.ts","webpack://MkitFPdf/./src/utilities/node/get-nodes/get-scene-node-by-id.ts","webpack://MkitFPdf/./src/utilities/node/get-nodes/get-selected-nodes-or-all-nodes.ts","webpack://MkitFPdf/./src/utilities/node/insert-node/insert-after-node.ts","webpack://MkitFPdf/./src/utilities/node/insert-node/insert-before-node.ts","webpack://MkitFPdf/./src/utilities/node/is-locked.ts","webpack://MkitFPdf/./src/utilities/node/is-visible.ts","webpack://MkitFPdf/./src/utilities/node/is-within-instance-node.ts","webpack://MkitFPdf/./src/utilities/node/load-fonts-async.ts","webpack://MkitFPdf/./src/utilities/node/relaunch-button/private/update-relaunch-buttons-data.ts","webpack://MkitFPdf/./src/utilities/node/relaunch-button/set-relaunch-button.ts","webpack://MkitFPdf/./src/utilities/node/relaunch-button/unset-relaunch-button.ts","webpack://MkitFPdf/./src/utilities/node/sibling-nodes/are-sibling-nodes.ts","webpack://MkitFPdf/./src/utilities/node/sibling-nodes/compute-sibling-nodes.ts","webpack://MkitFPdf/./src/utilities/node/sort-nodes/sort-nodes-by-canonical-order.ts","webpack://MkitFPdf/./src/utilities/node/sort-nodes/sort-nodes-by-name.ts","webpack://MkitFPdf/./src/utilities/node/sort-nodes/update-nodes-sort-order.ts","webpack://MkitFPdf/./src/utilities/node/traverse-node-async.ts","webpack://MkitFPdf/./src/utilities/node/traverse-node.ts","webpack://MkitFPdf/./src/utilities/number/evaluate-numeric-expression.ts","webpack://MkitFPdf/./src/utilities/number/is-valid-numeric-input.ts","webpack://MkitFPdf/./src/utilities/number/private/regex.ts","webpack://MkitFPdf/./src/utilities/object/clone-object.ts","webpack://MkitFPdf/./src/utilities/object/compare-objects.ts","webpack://MkitFPdf/./src/utilities/object/compare-string-arrays.ts","webpack://MkitFPdf/./src/utilities/object/deduplicate-array.ts","webpack://MkitFPdf/./src/utilities/object/extract-attributes.ts","webpack://MkitFPdf/./src/utilities/settings.ts","webpack://MkitFPdf/./src/utilities/string/format-message.ts","webpack://MkitFPdf/./src/utilities/string/pluralize.ts","webpack://MkitFPdf/./src/utilities/ui.ts","webpack://MkitFPdf/./node_modules/hex-rgb/index.js","webpack://MkitFPdf/./node_modules/rgb-hex/index.js","webpack://MkitFPdf/webpack/bootstrap","webpack://MkitFPdf/webpack/runtime/compat get default export","webpack://MkitFPdf/webpack/runtime/define property getters","webpack://MkitFPdf/webpack/runtime/hasOwnProperty shorthand","webpack://MkitFPdf/webpack/runtime/make namespace object","webpack://MkitFPdf/./src/figma/figma.ts"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\n\n\n/*\n * @version    1.4.0\n * @date       2015-10-26\n * @stability  3 - Stable\n * @author     Lauri Rooden (https://github.com/litejs/natural-compare-lite)\n * @license    MIT License\n */\n\n\nvar naturalCompare = function(a, b) {\n\tvar i, codeA\n\t, codeB = 1\n\t, posA = 0\n\t, posB = 0\n\t, alphabet = String.alphabet\n\n\tfunction getCode(str, pos, code) {\n\t\tif (code) {\n\t\t\tfor (i = pos; code = getCode(str, i), code < 76 && code > 65;) ++i;\n\t\t\treturn +str.slice(pos - 1, i)\n\t\t}\n\t\tcode = alphabet && alphabet.indexOf(str.charAt(pos))\n\t\treturn code > -1 ? code + 76 : ((code = str.charCodeAt(pos) || 0), code < 45 || code > 127) ? code\n\t\t\t: code < 46 ? 65               // -\n\t\t\t: code < 48 ? code - 1\n\t\t\t: code < 58 ? code + 18        // 0-9\n\t\t\t: code < 65 ? code - 11\n\t\t\t: code < 91 ? code + 11        // A-Z\n\t\t\t: code < 97 ? code - 37\n\t\t\t: code < 123 ? code + 5        // a-z\n\t\t\t: code - 63\n\t}\n\n\n\tif ((a+=\"\") != (b+=\"\")) for (;codeB;) {\n\t\tcodeA = getCode(a, posA++)\n\t\tcodeB = getCode(b, posB++)\n\n\t\tif (codeA < 76 && codeB < 76 && codeA > 66 && codeB > 66) {\n\t\t\tcodeA = getCode(a, posA, posA)\n\t\t\tcodeB = getCode(b, posB, posA = i)\n\t\t\tposB = i\n\t\t}\n\n\t\tif (codeA != codeB) return (codeA < codeB) ? -1 : 1\n\t}\n\treturn 0\n}\n\ntry {\n\tmodule.exports = naturalCompare;\n} catch (e) {\n\tString.naturalCompare = naturalCompare;\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { emit, on } from \"utilities\";\n//const TextDecoder = require('text-decoding').TextDecoder;\nconst apiKEY = \"1255146474787882010\";\nfunction Encode2(unicodeString) {\n    const bf = Buffer.from(unicodeString);\n    let result = \"\";\n    for (const char of bf) {\n        if (char >= 127)\n            result += \"&#\" + char + \";\";\n        else\n            result += String.fromCharCode(char);\n    }\n    return result;\n}\nfunction Encode(unicodeString) {\n    let result = \"\";\n    for (let i = 0; i < unicodeString.length; i++) {\n        const char = unicodeString.charCodeAt(i);\n        if (char >= 127)\n            result += \"&#\" + char + \";\";\n        else\n            result += String.fromCharCode(char);\n    }\n    return result;\n}\nconst getTextNodeInfo = (text, frame) => __awaiter(void 0, void 0, void 0, function* () {\n    /* \t\tconst json = await frame.exportAsync({\n          format: 'JSON_REST_V1',\n          //svgIdAttribute: true,\n          //contentsOnly: false,\n          //svgOutlineText: false,\n          });\n   */\n    let json = null;\n    let parentJson = null;\n    /*      json = await text.exportAsync({\n      format: 'JSON_REST_V1',\n      //svgIdAttribute: true,\n      //contentsOnly: false,\n      //svgOutlineText: false,\n    });\n     if (text.parent) {\n      //@ts-ignore\n           parentJson = await text.parent.exportAsync({\n        format: 'JSON_REST_V1',\n        //svgIdAttribute: true,\n        //contentsOnly: false,\n        //svgOutlineText: false,\n      });\n   \n    }\n    */\n    if (figma && text.componentPropertyReferences && figma.currentPage) {\n        // Font size stimmt nicht immer\n        //\tfigma.currentPage.selection = [text];\n        //console.log('select ', figma.currentPage.selection);\n    }\n    let name = Encode(text.name);\n    let offsetTop = null;\n    let renderOffset = {\n        x: 0,\n        y: 0,\n    };\n    if (text.absoluteBoundingBox && frame.absoluteBoundingBox) {\n        offsetTop = {\n            x: text.absoluteBoundingBox.x - frame.absoluteBoundingBox.x,\n            y: text.absoluteBoundingBox.y - frame.absoluteBoundingBox.y,\n        };\n    }\n    if (text.absoluteRenderBounds && frame.absoluteRenderBounds) {\n        renderOffset = {\n            x: text.absoluteRenderBounds.x - frame.absoluteRenderBounds.x - text.x,\n            y: text.absoluteRenderBounds.y - frame.absoluteRenderBounds.y - text.y,\n        };\n    }\n    const info = {\n        id: text.id,\n        name: name,\n        visible: text.visible,\n        x: text.x,\n        y: text.y,\n        renderOffset: renderOffset,\n        offset: getParentFrameOffset(text.parent, frame),\n        offsetTop: offsetTop,\n        absoluteBoundingBox: text.absoluteBoundingBox,\n        width: text.width,\n        height: text.height,\n        textAutoResize: text.textAutoResize,\n        textAlignHorizontal: text.textAlignHorizontal,\n        textAlignVertical: text.textAlignVertical,\n        leadingTrim: text.leadingTrim,\n        //  lineHeight:text.lineHeight,\n        //listSpacing:text.listSpacing,\n        //    letterSpacing:text.letterSpacing,\n        rotation: text.rotation,\n        paragraphIndent: text.paragraphIndent,\n        paragraphSpacing: text.paragraphSpacing,\n        //absoluteTransform: text.absoluteTransform,\n        //relativeTransform:text.relativeTransform,\n        opacity: text.opacity,\n        stroke: {\n            strokes: text.strokes,\n            strokeAlign: text.strokeAlign,\n            strokeCap: text.strokeCap,\n            //strokeGeometry: text.strokeGeometry,\n            strokeJoin: text.strokeJoin,\n            strokeWeight: text.strokeWeight,\n        },\n        effect: text.effects,\n        style: text.getStyledTextSegments([\n            \"fontSize\",\n            \"fontName\",\n            \"fontWeight\",\n            \"textDecoration\",\n            \"textCase\",\n            \"lineHeight\",\n            \"letterSpacing\",\n            \"fills\",\n            \"textStyleId\",\n            \"fillStyleId\",\n            \"listOptions\",\n            \"indentation\",\n            \"hyperlink\",\n        ]),\n        json: json,\n        parentJson: parentJson,\n    };\n    return info;\n});\n//\nconst getSvgNamesForNodes = (frame, textInfos, frameInfos = {}, textStyles = {}) => __awaiter(void 0, void 0, void 0, function* () {\n    let names = {\n        names: {},\n        ids: {},\n    };\n    let nameIndices = {};\n    //nameIndices[frame.name] = 1;\n    const textNodes = [];\n    const compoentNodes = [];\n    //figma.skipInvisibleInstanceChildren = true;\n    //console.log(\"gstart frame\", frame.name, frame.visible, frame.type, frame.id)\n    function recursiv(node, frame) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (node.visible) {\n                let index = \"\";\n                const fname = node.name;\n                if (nameIndices[fname]) {\n                    index = \"_\" + (nameIndices[fname] + 1);\n                    nameIndices[fname] += 1;\n                }\n                else {\n                    nameIndices[fname] = 1;\n                }\n                const fidx = fname + index;\n                //console.log(\"...\",fidx,node.id,node.type)\n                names.names[fidx] = \"\" + node.id;\n                names.names[Encode(fidx)] = \"\" + node.id;\n                names.names[Encode2(fidx)] = \"\" + node.id;\n                names.ids[\"\" + node.id] = 1;\n                if (node.type == \"TEXT\") {\n                    textNodes.push(node);\n                    if (node.componentPropertyReferences) {\n                        compoentNodes.push(node);\n                    }\n                }\n                if (node.type == \"FRAME\") {\n                    var parent = node;\n                    var ox = 0;\n                    var oy = 0;\n                    //console.log(\"before\", frame.name, node.name, \"ox1\", node.x, \"oy1\", node.y);\n                    while (parent) {\n                        if (parent == frame)\n                            break;\n                        //console.log(parent.name, \"ox1\", ox, \"oy1\", oy);\n                        //@ts-ignore\n                        ox += parent.x;\n                        //@ts-ignore\n                        oy += parent.y;\n                        //@ts-ignore\n                        parent = parent.parent;\n                    }\n                    //console.log(\"end\", \"ox1\", ox, \"oy1\", oy);\n                    frameInfos[node.id] = {\n                        layoutGridNodes: node.layoutGrids,\n                        effectNodes: node.effects,\n                        x: node.x,\n                        y: node.y,\n                        ax: ox,\n                        ay: oy,\n                        width: node.width,\n                        height: node.height,\n                    };\n                }\n                if (node.children)\n                    for (const child of node.children) {\n                        yield recursiv(child, frame);\n                    }\n            }\n        });\n    }\n    yield recursiv(frame, frame);\n    const page = frame.parent;\n    //@ts-ignore\n    const lastSelction = figma.currentPage.selection;\n    try {\n        figma.currentPage.selection = compoentNodes;\n    }\n    catch (e) { }\n    for (const text of textNodes) {\n        const nodeInfo = yield getTextNodeInfo(text, frame);\n        /* const tStyleId=nodeInfo.style[0].textStyleId;\n        if (tStyleId && !textStyles[tStyleId])\n        {\n          textStyles[tStyleId]=figma.getStyleById(tStyleId)\n          \n          } */\n        textInfos.push(nodeInfo);\n    }\n    figma.currentPage.selection = lastSelction;\n    return names;\n});\nfunction getParentFrameOffset(node, frame) {\n    if (node.id == frame.id) {\n        return { x: 0, y: 0 };\n    }\n    //frame.absoluteBoundingBox;\n    if (node.parent) {\n        let offset = getParentFrameOffset(node.parent, frame);\n        //if ( node.name == 'Sed ut perspiciatis')\n        //@ts-ignore\n        //   console.log(\"button is \",node.type,node.x,node.y)\n        if (node.type == \"FRAME\" ||\n            node.type == \"INSTANCE\" ||\n            node.type == \"COMPONENT\" ||\n            node.type == \"COMPONENT_SET\") {\n            return { x: node.x + offset.x, y: node.y + offset.y };\n        }\n        if (node.type == \"GROUP\") {\n            return offset;\n        }\n    }\n    return { x: 0, y: 0 };\n}\nfunction collectFrameInfo(frame, info) {\n    return __awaiter(this, void 0, void 0, function* () {\n        //  const svg = await exportSVG(frame);\n        let svg = \"\";\n        let json = {};\n        let parent = {};\n        //console.log('PDF_GENERATOR collectFrameInfo start');\n        if (!info.shortInfo) {\n            try {\n                svg = yield frame.exportAsync({\n                    format: \"SVG_STRING\",\n                    svgIdAttribute: true,\n                    //contentsOnly: false,\n                    svgOutlineText: false,\n                });\n            }\n            catch (e) {\n                console.error(\"PDF_GENERATOR exportAsync \", e, frame, frame.name);\n            }\n        }\n        const textInfos = [];\n        const textStyles = {};\n        const frameInfos = {};\n        const nodeNames = !info.shortInfo\n            ? yield getSvgNamesForNodes(frame, textInfos, frameInfos, textStyles)\n            : {};\n        //console.log('PDF_GENERATOR collectFrameInfo end');\n        return {\n            svg: svg,\n            /*     json: json,\n            parent: parent,\n         */ //allNames: {},\n            textInfos: textInfos,\n            frameInfos: frameInfos,\n            // textStyles:textStyles,\n            width: frame.width,\n            height: frame.height,\n            id: frame.id,\n            name: frame.name,\n            x: frame.x,\n            y: frame.y,\n            absoluteBoundingBox: frame.absoluteBoundingBox,\n            nodeNames: nodeNames.names,\n        };\n    });\n}\nfunction exportAllPages(info) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const pluginData = figma.root.getPluginData(apiKEY);\n        const pdfResult = {\n            name: figma.root.name,\n            id: figma.root.id,\n            pages: [],\n            printFrames: [],\n            pluginData: pluginData,\n        };\n        figma.skipInvisibleInstanceChildren = true;\n        /*   const pages = figma.root.findAllWithCriteria({\n          types: [\"PAGE\"],\n        });\n       */\n        for (const page of figma.root.children) {\n            //for (const page of pages) {\n            //console.log(\"page...\",page.name,page.children);\n            const pageInfo = {\n                name: page.name,\n                id: page.id,\n                frames: [],\n            };\n            for (const child of page.children) {\n                if (child.type == \"FRAME\") {\n                    const finfo = yield collectFrameInfo(child, info);\n                    //pageInfo.frames.push(finfo);\n                    pageInfo.frames.unshift(finfo);\n                }\n            }\n            pdfResult.pages.push(pageInfo);\n        }\n        //console.log(\"exportAllPages\", pdfResult);\n        emit(\"PDF_GENERATOR_RESULT\", pdfResult);\n    });\n}\nfunction exportFrame(frameId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const pluginData = figma.root.getPluginData(apiKEY);\n        const pdfResult = {\n            name: figma.root.name,\n            id: figma.root.id,\n            pages: [],\n            printFrames: [],\n            pluginData: pluginData,\n        };\n        figma.skipInvisibleInstanceChildren = true;\n        /* for (const page of figma.root.children) {\n          const frames = figma.root.findAllWithCriteria({\n            types: [\"FRAME\"],\n          });\n      \n          for (const frame of frames) {\n            if (frame.id == frameId) {\n              let page = null;\n              let parent: any = frame;\n              while (parent) {\n                if (parent.parent && parent.parent.type == \"PAGE\") {\n                  page = parent.parent;\n                  break;\n                }\n                if (!parent) break;\n                parent = parent?.parent;\n              }\n              if (page) {\n                const pageInfo: PDFPageInfo = {\n                  name: page.name,\n                  id: page.id,\n                  frames: [],\n                };\n                pageInfo.frames.push(\n                  await collectFrameInfo(frame, {\n                    shortInfo: false,\n                    showPreviews: false,\n      \n                    useAllFrames: false,\n                  })\n                );\n                pdfResult.pages.push(pageInfo);\n              }\n              break;\n            }\n          }\n        } */\n        if (1) {\n            const frames = figma.root.findAllWithCriteria({\n                types: [\"FRAME\"],\n            });\n            for (const frame of frames) {\n                if (frame.id == frameId) {\n                    let page = null;\n                    let parent = frame;\n                    while (parent) {\n                        if (parent.parent && parent.parent.type == \"PAGE\") {\n                            page = parent.parent;\n                            break;\n                        }\n                        if (!parent)\n                            break;\n                        parent = parent === null || parent === void 0 ? void 0 : parent.parent;\n                    }\n                    if (page) {\n                        const pageInfo = {\n                            name: page.name,\n                            id: page.id,\n                            frames: [],\n                        };\n                        pageInfo.frames.push(yield collectFrameInfo(frame, {\n                            shortInfo: false,\n                            showPreviews: false,\n                            useAllFrames: false,\n                        }));\n                        pdfResult.pages.push(pageInfo);\n                    }\n                    break;\n                }\n            }\n        }\n        emit(\"PDF_FRAME_RESULT\", pdfResult);\n    });\n}\non(\"GLOBAL_OPTION\", function (data) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (data) {\n            yield figma.clientStorage.setAsync(\"GLOBAL_OPTION\", data);\n            return;\n        }\n        const figmaData = yield figma.clientStorage.getAsync(\"GLOBAL_OPTION\");\n        emit(\"GLOBAL_OPTION\", figmaData);\n    });\n});\non(\"PLUGIN_DATA\", function (data) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (data) {\n            figma.root.setPluginData(apiKEY, data);\n            return;\n        }\n        const figmaData = figma.root.getPluginData(apiKEY);\n        emit(\"PLUGIN_DATA\", figmaData);\n    });\n});\nfunction exportSelectPages(info) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const pluginData = figma.root.getPluginData(apiKEY);\n        const pdfResult = {\n            name: figma.root.name,\n            id: figma.root.id,\n            pages: [],\n            printFrames: [],\n            pluginData: pluginData,\n        };\n        const selections = figma.currentPage.selection;\n        if (selections.length > 0) {\n            const pagesMap = {};\n            for (const elm of selections) {\n                if (elm.type == \"FRAME\") {\n                    let page = null;\n                    let parent = elm;\n                    while (parent) {\n                        if (parent.parent && parent.parent.type == \"PAGE\") {\n                            page = parent.parent;\n                            break;\n                        }\n                        if (!parent)\n                            break;\n                        parent = parent === null || parent === void 0 ? void 0 : parent.parent;\n                    }\n                    if (page && page.id) {\n                        if (!pagesMap[page.id])\n                            pagesMap[page.id] = {\n                                page: page,\n                                frames: [],\n                            };\n                        pagesMap[page.id].frames.push(elm);\n                    }\n                }\n            }\n            for (const pf of Object.values(pagesMap)) {\n                const pageInfo = {\n                    name: pf.page.name,\n                    id: pf.page.id,\n                    frames: [],\n                };\n                for (const frame of pf.frames) {\n                    pageInfo.frames.push(yield collectFrameInfo(frame, info));\n                }\n                pdfResult.pages.push(pageInfo);\n            }\n        }\n        emit(\"PDF_GENERATOR_RESULT\", pdfResult);\n    });\n}\nfunction exportSelectFrames() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const selections = figma.currentPage.selection;\n        let result = [];\n        for (const elm of selections) {\n            if (elm.type == \"FRAME\") {\n                result.push(yield collectFrameInfo(elm, {\n                    shortInfo: false,\n                    showPreviews: false,\n                    useAllFrames: false,\n                }));\n            }\n        }\n        return {\n            state: \"ok\",\n            type: \"framedata\",\n            payload: result,\n        };\n    });\n}\nfunction localFonts() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const fonts = (yield figma.listAvailableFontsAsync()).filter((f) => f.fontName.family == \"LiebherrLogo\");\n        for (const font of fonts)\n            yield figma.loadFontAsync(font.fontName);\n        return {\n            state: \"ok\",\n            type: \"localfont\",\n            payload: {},\n        };\n    });\n}\nfunction fetchBuffer(data) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const result = yield fetch(data.url);\n        if (result && result.ok) {\n            return {\n                state: \"ok\",\n                type: \"fetchbuffer\",\n                payload: {\n                    state: \"ok\",\n                    buffer: yield result.arrayBuffer(),\n                },\n            };\n        }\n        return {\n            state: \"ok\",\n            type: \"fetchbuffer\",\n            payload: {\n                state: \"failed\",\n                buffer: null,\n            },\n        };\n    });\n}\non(\"PDF_GENERATOR\", function (info) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            if (info.useAllFrames) {\n                return yield exportAllPages(info);\n            }\n            return yield exportSelectPages(info);\n        }\n        catch (e) {\n            console.log(\"PDF_GENERATOR exception \", e);\n        }\n    });\n});\non(\"PDF_FRAME\", function (info) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            return yield exportFrame(info.frameId);\n        }\n        catch (e) {\n            console.log(\"PDF_GENERATOR exception \", e);\n        }\n    });\n});\nfigma.on(\"selectionchange\", () => __awaiter(void 0, void 0, void 0, function* () {\n    const selections = figma.currentPage.selection;\n    let c = 0;\n    for (const elm of selections) {\n        if (elm.type == \"FRAME\") {\n            c++;\n        }\n    }\n    //if (__IS_DEBUG) console.log(\"figma.on('selectionchange'\", c);\n    emit(\"FIGMA_SELECTIONCHANGE\", { frames: c });\n}));\n/*   frame.findAll().forEach((o) => {\n    let index = '';\n    if ( o.id == 'I7:1877;277:16688'){\n      console.log(\"getSvgNamesForNodes\",o.name,o.visible,o.type,o.id)\n    }\n    if (o.visible) {\n      //const fname = Encode(o.name);\n      const fname = o.name;\n      if (nameIndices[fname]) {\n        index = '_' + (nameIndices[fname] + 1);\n        nameIndices[fname] += 1;\n      } else {\n        nameIndices[fname] = 1;\n      }\n      names.names[fname + index] = '' + o.id;\n      names.names[Encode(fname + index)] = '' + o.id;\n      names.names[Encode2(fname + index)] = '' + o.id;\n      names.ids['' + o.id]=1;\n    }\n  });\n */ //  console.log(names.ids)\non(\"USER_SCRIPT\", function (data) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            if (data.func) {\n                switch (data.func) {\n                    case \"exportSelectFrames\":\n                        emit(\"USER_SCRIPT\", yield exportSelectFrames());\n                        break;\n                    case \"localfont\":\n                        emit(\"USER_SCRIPT\", yield localFonts());\n                        break;\n                    case \"fetchbuffer\":\n                        emit(\"USER_SCRIPT\", yield fetchBuffer(data.params));\n                        break;\n                }\n            }\n            else {\n                const result = eval(data.script);\n                if (result && result.then) {\n                    result.then((result) => {\n                        emit(\"USER_SCRIPT\", result);\n                    });\n                }\n                else {\n                    emit(\"USER_SCRIPT\", result);\n                }\n            }\n        }\n        catch (e) {\n            emit(\"USER_SCRIPT\", { state: \"FAILED\", e: \"\" + e });\n        }\n    });\n});\n","import hexRgb from 'hex-rgb';\n/**\n * Converts the given `hexColor` (eg. `000000`) to RGB format\n * (eg. `{ r: 0, g: 0, b: 0 }`). Each value in the returned\n * [RGB](https://figma.com/plugin-docs/api/RGB/) plain object is\n * between `0` and `1`.\n *\n * @returns Returns an [RGB](https://figma.com/plugin-docs/api/RGB/) plain\n * object, else `null` if `hexColor` was invalid.\n * @category Color\n */\nexport function convertHexColorToRgbColor(hexColor) {\n    if (hexColor.length !== 3 && hexColor.length !== 6) {\n        return null;\n    }\n    try {\n        const { red, green, blue } = hexRgb(hexColor);\n        return {\n            b: blue / 255,\n            g: green / 255,\n            r: red / 255\n        };\n    }\n    catch (_a) {\n        return null;\n    }\n}\n","import { NAMED_COLORS } from './private/named-colors';\n/**\n * Converts the given `namedColor` (eg. `black`) to hexadecimal format\n * (eg. `000000`).\n *\n * @returns Returns a hexadecimal color as an uppercase string, else `null`\n * if `namedColor` was invalid.\n * @category Color\n */\nexport function convertNamedColorToHexColor(namedColor) {\n    const hexColor = NAMED_COLORS[namedColor.toLowerCase()];\n    if (typeof hexColor === 'undefined') {\n        return null;\n    }\n    return hexColor;\n}\n","import rgbHex from 'rgb-hex';\n/**\n * Converts the given `rgbColor` (eg. `{ r: 0, g: 0, b: 0 }`) to hexadecimal\n * format (eg. `000000`). Each value in the given\n * [RGB](https://figma.com/plugin-docs/api/RGB/) plain object must be\n * between `0` and `1`.\n *\n * @returns Returns a hexadecimal color as an uppercase string, else `null`\n * if `rgbColor` was invalid.\n * @category Color\n */\nexport function convertRgbColorToHexColor(rgbColor) {\n    const { r, g, b } = rgbColor;\n    if (r < 0 || r > 1 || g < 0 || g > 1 || b < 0 || b > 1) {\n        return null;\n    }\n    try {\n        return rgbHex(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)).toUpperCase();\n    }\n    catch (_a) {\n        return null;\n    }\n}\n","import { convertHexColorToRgbColor } from './convert-hex-color-to-rgb-color';\n/**\n * Returns `true` if `hexColor` is a valid hexadecimal color.\n *\n * @category Color\n */\nexport function isValidHexColor(hexColor) {\n    return convertHexColorToRgbColor(hexColor) !== null;\n}\n","// Adapted from https://github.com/bahamas10/css-color-names/blob/a981685d57b3bed64f5c2a2a0027478b44f14cb5/css-color-names.json\nexport const NAMED_COLORS = {\n    aliceblue: 'F0F8FF',\n    antiquewhite: 'FAEBD7',\n    aqua: '00FFFF',\n    aquamarine: '7FFFD4',\n    azure: 'F0FFFF',\n    beige: 'F5F5DC',\n    bisque: 'FFE4C4',\n    black: '000000',\n    blanchedalmond: 'FFEBCD',\n    blue: '0000FF',\n    blueviolet: '8A2BE2',\n    brown: 'A52A2A',\n    burlywood: 'DEB887',\n    cadetblue: '5F9EA0',\n    chartreuse: '7FFF00',\n    chocolate: 'D2691E',\n    coral: 'FF7F50',\n    cornflowerblue: '6495ED',\n    cornsilk: 'FFF8DC',\n    crimson: 'DC143C',\n    cyan: '00FFFF',\n    darkblue: '00008B',\n    darkcyan: '008B8B',\n    darkgoldenrod: 'B8860B',\n    darkgray: 'A9A9A9',\n    darkgreen: '006400',\n    darkgrey: 'A9A9A9',\n    darkkhaki: 'BDB76B',\n    darkmagenta: '8B008B',\n    darkolivegreen: '556B2F',\n    darkorange: 'FF8C00',\n    darkorchid: '9932CC',\n    darkred: '8B0000',\n    darksalmon: 'E9967A',\n    darkseagreen: '8FBC8F',\n    darkslateblue: '483D8B',\n    darkslategray: '2F4F4F',\n    darkslategrey: '2F4F4F',\n    darkturquoise: '00CED1',\n    darkviolet: '9400D3',\n    deeppink: 'FF1493',\n    deepskyblue: '00BFFF',\n    dimgray: '696969',\n    dimgrey: '696969',\n    dodgerblue: '1E90FF',\n    firebrick: 'B22222',\n    floralwhite: 'FFFAF0',\n    forestgreen: '228B22',\n    fuchsia: 'FF00FF',\n    gainsboro: 'DCDCDC',\n    ghostwhite: 'F8F8FF',\n    gold: 'FFD700',\n    goldenrod: 'DAA520',\n    gray: '808080',\n    green: '008000',\n    greenyellow: 'ADFF2F',\n    grey: '808080',\n    honeydew: 'F0FFF0',\n    hotpink: 'FF69B4',\n    indianred: 'CD5C5C',\n    indigo: '4B0082',\n    ivory: 'FFFFF0',\n    khaki: 'F0E68C',\n    lavender: 'E6E6FA',\n    lavenderblush: 'FFF0F5',\n    lawngreen: '7CFC00',\n    lemonchiffon: 'FFFACD',\n    lightblue: 'ADD8E6',\n    lightcoral: 'F08080',\n    lightcyan: 'E0FFFF',\n    lightgoldenrodyellow: 'FAFAD2',\n    lightgray: 'D3D3D3',\n    lightgreen: '90EE90',\n    lightgrey: 'D3D3D3',\n    lightpink: 'FFB6C1',\n    lightsalmon: 'FFA07A',\n    lightseagreen: '20B2AA',\n    lightskyblue: '87CEFA',\n    lightslategray: '778899',\n    lightslategrey: '778899',\n    lightsteelblue: 'B0C4DE',\n    lightyellow: 'FFFFE0',\n    lime: '00FF00',\n    limegreen: '32CD32',\n    linen: 'FAF0E6',\n    magenta: 'FF00FF',\n    maroon: '800000',\n    mediumaquamarine: '66CDAA',\n    mediumblue: '0000CD',\n    mediumorchid: 'BA55D3',\n    mediumpurple: '9370DB',\n    mediumseagreen: '3CB371',\n    mediumslateblue: '7B68EE',\n    mediumspringgreen: '00FA9A',\n    mediumturquoise: '48D1CC',\n    mediumvioletred: 'C71585',\n    midnightblue: '191970',\n    mintcream: 'F5FFFA',\n    mistyrose: 'FFE4E1',\n    moccasin: 'FFE4B5',\n    navajowhite: 'FFDEAD',\n    navy: '000080',\n    oldlace: 'FDF5E6',\n    olive: '808000',\n    olivedrab: '6B8E23',\n    orange: 'FFA500',\n    orangered: 'FF4500',\n    orchid: 'DA70D6',\n    palegoldenrod: 'EEE8AA',\n    palegreen: '98FB98',\n    paleturquoise: 'AFEEEE',\n    palevioletred: 'DB7093',\n    papayawhip: 'FFEFD5',\n    peachpuff: 'FFDAB9',\n    peru: 'CD853F',\n    pink: 'FFC0CB',\n    plum: 'DDA0DD',\n    powderblue: 'B0E0E6',\n    purple: '800080',\n    rebeccapurple: '663399',\n    red: 'FF0000',\n    rosybrown: 'BC8F8F',\n    royalblue: '4169E1',\n    saddlebrown: '8B4513',\n    salmon: 'FA8072',\n    sandybrown: 'F4A460',\n    seagreen: '2E8B57',\n    seashell: 'FFF5EE',\n    sienna: 'A0522D',\n    silver: 'C0C0C0',\n    skyblue: '87CEEB',\n    slateblue: '6A5ACD',\n    slategray: '708090',\n    slategrey: '708090',\n    snow: 'FFFAFA',\n    springgreen: '00FF7F',\n    steelblue: '4682B4',\n    tan: 'D2B48C',\n    teal: '008080',\n    thistle: 'D8BFD8',\n    tomato: 'FF6347',\n    turquoise: '40E0D0',\n    violet: 'EE82EE',\n    wheat: 'F5DEB3',\n    white: 'FFFFFF',\n    whitesmoke: 'F5F5F5',\n    yellow: 'FFFF00',\n    yellowgreen: '9ACD32'\n};\n","const eventHandlers = {};\nlet currentId = 0;\n/**\n * Registers an event `handler` for the given event `name`.\n *\n * @returns Returns a function for deregistering the `handler`.\n * @category Events\n */\nexport function on(name, handler) {\n    const id = `${currentId}`;\n    currentId += 1;\n    eventHandlers[id] = { handler, name };\n    return function () {\n        delete eventHandlers[id];\n    };\n}\n/**\n * Registers an event `handler` that will run at most once for the given\n * event `name`.\n *\n * @returns Returns a function for deregistering the `handler`.\n * @category Events\n */\nexport function once(name, handler) {\n    let done = false;\n    return on(name, function (...args) {\n        if (done === true) {\n            return;\n        }\n        done = true;\n        handler(...args);\n    });\n}\n/**\n * Calling `emit` in the [main context](https://figma.com/plugin-docs/how-plugins-run/) invokes the event\n * handler for the matching event `name` in your UI. Correspondingly, calling\n * `emit` in your UI invokes the event handler for the matching event `name`\n * in the main context.\n *\n * All `args` passed after `name` will be directly\n * [applied](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply)\n * on the event handler.\n *\n * See the [recipe for passing data between the main and UI contexts](<%- query('page', 'recipes').url %>#passing-data-between-the-plugin-widgets-main-and-ui-contexts).\n *\n * @category Events\n */\nexport const emit = typeof window === \"undefined\"\n    ? function (name, ...args) {\n        //console.log(\"emit:figma\");\n        figma.ui.postMessage([name, ...args]);\n    }\n    : function (name, ...args) {\n        //console.log(\"emit:window.parent.postMessage\");\n        if (window !== window.parent)\n            window.parent.postMessage({\n                pluginMessage: [name, ...args],\n            }, \"*\");\n    };\nfunction invokeEventHandler(name, args) {\n    for (const id in eventHandlers) {\n        if (eventHandlers[id].name === name) {\n            eventHandlers[id].handler.apply(null, args);\n        }\n    }\n}\nif (typeof window === \"undefined\") {\n    figma.ui.onmessage = function ([name, ...args]) {\n        invokeEventHandler(name, args);\n    };\n}\nelse {\n    window.onmessage = function (event) {\n        //console.log(\"onmessage:...\");\n        try {\n            if (typeof event.data.pluginMessage === \"undefined\") {\n                return;\n            }\n        }\n        catch (e) {\n            return;\n        }\n        try {\n            const [name, ...args] = event.data.pluginMessage;\n            invokeEventHandler(name, args);\n        }\n        catch (e) {\n            // AUIT\n            console.error(\"onmessage:\", '' + e);\n        }\n    };\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * Creates an `async` function that will invoke the given `callback` and run\n * for at least `minimumTime` (in milliseconds).\n *\n * @category Function\n */\nexport function ensureMinimumTime(minimumTime, callback) {\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const startTimestamp = Date.now();\n            const result = yield callback(...args);\n            const elapsedTime = Date.now() - startTimestamp;\n            if (elapsedTime >= minimumTime) {\n                return result;\n            }\n            return new Promise(function (resolve) {\n                setTimeout(function () {\n                    resolve(result);\n                }, minimumTime - elapsedTime);\n            });\n        });\n    };\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCanvasElementFromImageElement } from './create-canvas-element-from-image-element';\nimport { createImageElementFromBlobAsync } from './create-image-element-from-blob-async';\n/**\n * Creates an [`HTMLCanvasElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement)\n * from a [`blob`](https://developer.mozilla.org/en-US/docs/Web/API/Blob)\n * representing an image.\n *\n * @category Image\n */\nexport function createCanvasElementFromBlobAsync(blob) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const imageElement = yield createImageElementFromBlobAsync(blob);\n        return createCanvasElementFromImageElement(imageElement);\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCanvasElementFromImageElement } from './create-canvas-element-from-image-element';\nimport { createImageElementFromBytesAsync } from './create-image-element-from-bytes-async';\n/**\n * Creates an [`HTMLCanvasElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement)\n * from the `bytes` of an image.\n *\n * @category Image\n */\nexport function createCanvasElementFromBytesAsync(bytes) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const imageElement = yield createImageElementFromBytesAsync(bytes);\n        return createCanvasElementFromImageElement(imageElement);\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * Creates an [`HTMLCanvasElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement)\n * from an [`HTMLImageElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement).\n *\n * @category Image\n */\nexport function createCanvasElementFromImageElement(imageElement) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const canvasElement = document.createElement('canvas');\n        canvasElement.width = imageElement.width;\n        canvasElement.height = imageElement.height;\n        const context = canvasElement.getContext('2d');\n        context.drawImage(imageElement, 0, 0);\n        return canvasElement;\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * Creates an [`HTMLImageElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement)\n * from a [`blob`](https://developer.mozilla.org/en-US/docs/Web/API/Blob)\n * representing an image.\n *\n * @category Image\n */\nexport function createImageElementFromBlobAsync(blob) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise(function (resolve, reject) {\n            const imageElement = new Image();\n            imageElement.onload = function () {\n                resolve(imageElement);\n            };\n            imageElement.onerror = reject;\n            imageElement.src = URL.createObjectURL(blob);\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createImageElementFromBlobAsync } from './create-image-element-from-blob-async';\n/**\n * Creates an [`HTMLImageElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement)\n * from the `bytes` of an image.\n *\n * @category Image\n */\nexport function createImageElementFromBytesAsync(bytes) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return createImageElementFromBlobAsync(new Blob([bytes]));\n    });\n}\n","/**\n * Creates an [`ImagePaint`](https://figma.com/plugin-docs/api/Paint/#imagepaint)\n * object from the `bytes` of an image.\n *\n * @category Image\n */\nexport function createImagePaint(bytes) {\n    const image = figma.createImage(bytes);\n    return {\n        imageHash: image.hash,\n        scaleMode: 'FILL',\n        scalingFactor: 0.5,\n        type: 'IMAGE'\n    };\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * Read the bytes off an [`HTMLCanvasElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement).\n *\n * @category Image\n */\nexport function readBytesFromCanvasElementAsync(canvasElement) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise(function (resolve, reject) {\n            canvasElement.toBlob(function (blob) {\n                const reader = new FileReader();\n                reader.onload = function () {\n                    resolve(new Uint8Array(reader.result));\n                };\n                reader.onerror = reject;\n                reader.readAsArrayBuffer(blob);\n            });\n        });\n    });\n}\n","// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\nexport { convertHexColorToRgbColor } from './color/convert-hex-color-to-rgb-color';\nexport { convertNamedColorToHexColor } from './color/convert-named-color-to-hex-color';\nexport { convertRgbColorToHexColor } from './color/convert-rgb-color-to-hex-color';\nexport { isValidHexColor } from './color/is-valid-hex-color';\nexport { emit, on, once } from './events';\nexport { ensureMinimumTime } from './function/ensure-minimum-time';\nexport { createCanvasElementFromBlobAsync } from './image/create-canvas-element-from-blob-async';\nexport { createCanvasElementFromBytesAsync } from './image/create-canvas-element-from-bytes-async';\nexport { createCanvasElementFromImageElement } from './image/create-canvas-element-from-image-element';\nexport { createImageElementFromBlobAsync } from './image/create-image-element-from-blob-async';\nexport { createImageElementFromBytesAsync } from './image/create-image-element-from-bytes-async';\nexport { createImagePaint } from './image/create-image-paint';\nexport { readBytesFromCanvasElementAsync } from './image/read-bytes-from-canvas-element-async';\nexport { MIXED_NUMBER, MIXED_STRING } from './mixed-values';\nexport { getDocumentUseCount, incrementDocumentUseCount, resetDocumentUseCount } from './monetization/document-use-count';\nexport { validateGumroadLicenseKeyMainAsync } from './monetization/gumroad/validate-gumroad-license-key-main-async';\nexport { validateGumroadLicenseKeyUiAsync } from './monetization/gumroad/validate-gumroad-license-key-ui-async';\nexport { getTotalUseCountAsync, incrementTotalUseCountAsync, resetTotalUseCountAsync } from './monetization/total-use-count';\nexport { getAbsolutePosition } from './node/absolute-position/get-absolute-position';\nexport { setAbsolutePosition } from './node/absolute-position/set-absolute-position';\nexport { collapseLayer } from './node/collapse-layer';\nexport { computeBoundingBox } from './node/compute-bounding-box';\nexport { computeMaximumBounds } from './node/compute-maximum-bounds';\nexport { deduplicateNodes } from './node/deduplicate-nodes';\nexport { getDocumentComponents } from './node/get-nodes/get-document-components';\nexport { getParentNode } from './node/get-nodes/get-parent-node';\nexport { getSceneNodeById } from './node/get-nodes/get-scene-node-by-id';\nexport { getSelectedNodesOrAllNodes } from './node/get-nodes/get-selected-nodes-or-all-nodes';\nexport { insertAfterNode } from './node/insert-node/insert-after-node';\nexport { insertBeforeNode } from './node/insert-node/insert-before-node';\nexport { isLocked } from './node/is-locked';\nexport { isVisible } from './node/is-visible';\nexport { isWithinInstanceNode } from './node/is-within-instance-node';\nexport { loadFontsAsync } from './node/load-fonts-async';\nexport { setRelaunchButton } from './node/relaunch-button/set-relaunch-button';\nexport { unsetRelaunchButton } from './node/relaunch-button/unset-relaunch-button';\nexport { areSiblingNodes } from './node/sibling-nodes/are-sibling-nodes';\nexport { computeSiblingNodes } from './node/sibling-nodes/compute-sibling-nodes';\nexport { sortNodesByCanonicalOrder } from './node/sort-nodes/sort-nodes-by-canonical-order';\nexport { sortNodesByName } from './node/sort-nodes/sort-nodes-by-name';\nexport { updateNodesSortOrder } from './node/sort-nodes/update-nodes-sort-order';\nexport { traverseNode } from './node/traverse-node';\nexport { traverseNodeAsync } from './node/traverse-node-async';\nexport { evaluateNumericExpression } from './number/evaluate-numeric-expression';\nexport { isValidNumericInput } from './number/is-valid-numeric-input';\nexport { cloneObject } from './object/clone-object';\nexport { compareObjects } from './object/compare-objects';\nexport { compareStringArrays } from './object/compare-string-arrays';\nexport { deduplicateArray } from './object/deduplicate-array';\nexport { extractAttributes } from './object/extract-attributes';\nexport { loadSettingsAsync, saveSettingsAsync } from './settings';\nexport { formatErrorMessage, formatSuccessMessage, formatWarningMessage } from './string/format-message';\nexport { pluralize } from './string/pluralize';\nexport { showUI } from './ui';\n","export const MIXED_NUMBER = 999999999999999;\nexport const MIXED_STRING = '999999999999999';\n","const DEFAULT_KEY = 'documentUseCount';\n/**\n * Returns the plugin’s use count for the current document.\n *\n * @param key  The key on the current document on which to store the use\n * count. Defaults to `'documentUseCount'`.\n * @category Monetization\n */\nexport function getDocumentUseCount(key = DEFAULT_KEY) {\n    const value = figma.root.getPluginData(key);\n    if (value === '') {\n        return 0;\n    }\n    const pluginData = JSON.parse(value);\n    return pluginData.useCount;\n}\n/**\n * Increments the plugin’s use count for the current document.\n *\n * @param key  The key on the current document on which to store the use\n * count. Defaults to `'documentUseCount'`.\n * @returns Returns the plugin’s new use count for the current document.\n * @category Monetization\n */\nexport function incrementDocumentUseCount(key = DEFAULT_KEY) {\n    const useCount = getDocumentUseCount(key);\n    const pluginData = {\n        useCount: useCount + 1\n    };\n    figma.root.setPluginData(key, JSON.stringify(pluginData));\n    return pluginData.useCount;\n}\n/**\n * Resets the plugin’s use count for the current document to `0`.\n *\n * @param key  The key on the current document on which to store the use\n * count. Defaults to `'documentUseCount'`.\n * @category Monetization\n */\nexport function resetDocumentUseCount(key = DEFAULT_KEY) {\n    const pluginData = {\n        useCount: 0\n    };\n    figma.root.setPluginData(key, JSON.stringify(pluginData));\n}\n","export const emptyLicense = {\n    email: null,\n    licenseKey: null,\n    purchaseTimestamp: null,\n    validationTimestamp: null,\n    variant: null\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { emptyLicense } from './private/empty-license';\n/**\n * Validates the given [Gumroad license key](https://help.gumroad.com/article/76-license-keys)\n * for the product with the given `productPermalink` in the\n * [main context](https://figma.com/plugin-docs/how-plugins-run/).\n *\n * @param options.productPermalink  The Gumroad “product permalink”. If the\n * Gumroad product URL is `https://gumroad.com/l/QGMY`, then the product\n * permalink is `'QGMY'`.\n * @param options.licenseKey  The Gumroad license key to validate.\n * @param options.incrementUseCount  Set to `true` to increment the license\n * key use count tracked by Gumroad. Defaults to `false`.\n * @return Returns a\n * [`LicenseKeyValidationResult`](https://github.com/yuanqing/create-figma-plugin/blob/main/packages/utilities/src/monetization/types.ts) object.\n * @category Monetization\n */\nexport function validateGumroadLicenseKeyMainAsync(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { licenseKey, productPermalink } = options;\n        const incrementUseCount = options.incrementUseCount === true ? 'true' : 'false';\n        const trimmedLicenseKey = licenseKey.trim();\n        if (trimmedLicenseKey === '') {\n            return Object.assign(Object.assign({}, emptyLicense), { result: 'INVALID_EMPTY' });\n        }\n        if (trimmedLicenseKey.length !== 35) {\n            return Object.assign(Object.assign({}, emptyLicense), { result: 'INVALID' });\n        }\n        const onmessage = figma.ui.onmessage; // Keep a reference to the previous `figma.ui.onmessage`\n        return new Promise(function (resolve) {\n            figma.ui.onmessage = function (result) {\n                figma.ui.onmessage = onmessage;\n                resolve(result);\n                figma.ui.close();\n            };\n            const validationTimestamp = new Date().toISOString();\n            // The script below is inserted via `scripts/interpolate-gumroad-script.ts`\n            const __html__ = `<script>const emptyLicense={email:null,licenseKey:null,purchaseTimestamp:null,validationTimestamp:null,variant:null};async function main(){async function n(){try{const t=await(await window.fetch(\"https://api.gumroad.com/v2/licenses/verify\",{body:\"increment_uses_count=${incrementUseCount}&license_key=\"+encodeURIComponent(\"${trimmedLicenseKey}\")+\"&product_permalink=\"+encodeURIComponent(\"${productPermalink}\"),headers:{\"Content-Type\":\"application/x-www-form-urlencoded;charset=UTF-8\"},method:\"POST\"})).json(),{purchase:e,success:a}=t;return a===!1||e.chargebacked===!0||e.disputed===!0||e.refunded===!0?{...emptyLicense,result:\"INVALID\"}:{email:e.email,licenseKey:\"${trimmedLicenseKey}\",purchaseTimestamp:e.sale_timestamp,result:\"VALID\",validationTimestamp:\"${validationTimestamp}\",variant:e.variants===\"\"?null:e.variants}}catch{return{...emptyLicense,result:\"ENDPOINT_DOWN\"}}}window.parent.postMessage({pluginMessage:await n()},\"*\")}main();</script>`;\n            figma.showUI(__html__, { visible: false });\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { emptyLicense } from './private/empty-license';\n/**\n * Validates the given [Gumroad license key](https://help.gumroad.com/article/76-license-keys)\n * for the product with the given `productPermalink` in the\n * [UI context](https://figma.com/plugin-docs/how-plugins-run/).\n *\n * @param options.productPermalink  The Gumroad “product permalink”. If the\n * Gumroad product URL is `https://gumroad.com/l/QGMY`, then the product\n * permalink is `'QGMY'`.\n * @param options.licenseKey  The Gumroad license key to validate.\n * @param options.incrementUseCount  Set to `true` to increment the license\n * key use count tracked by Gumroad. Defaults to `false`.\n * @return Returns a\n * [`LicenseKeyValidationResult`](https://github.com/yuanqing/create-figma-plugin/blob/main/packages/utilities/src/monetization/types.ts) object.\n * @category Monetization\n */\nexport function validateGumroadLicenseKeyUiAsync(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { licenseKey, productPermalink } = options;\n        const incrementUseCount = options.incrementUseCount === true ? 'true' : 'false';\n        const trimmedLicenseKey = licenseKey.trim();\n        if (trimmedLicenseKey === '') {\n            return Object.assign(Object.assign({}, emptyLicense), { result: 'INVALID_EMPTY' });\n        }\n        if (trimmedLicenseKey.length !== 35) {\n            return Object.assign(Object.assign({}, emptyLicense), { result: 'INVALID' });\n        }\n        try {\n            const response = yield window.fetch('https://api.gumroad.com/v2/licenses/verify', {\n                body: `increment_uses_count=${incrementUseCount}&license_key=` +\n                    encodeURIComponent(trimmedLicenseKey) +\n                    '&product_permalink=' +\n                    encodeURIComponent(productPermalink),\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n                },\n                method: 'POST'\n            });\n            const json = yield response.json();\n            const { purchase, success } = json;\n            if (success === false ||\n                purchase.chargebacked === true ||\n                purchase.disputed === true ||\n                purchase.refunded === true) {\n                return Object.assign(Object.assign({}, emptyLicense), { result: 'INVALID' });\n            }\n            return {\n                email: purchase.email,\n                licenseKey: trimmedLicenseKey,\n                purchaseTimestamp: purchase.sale_timestamp,\n                result: 'VALID',\n                validationTimestamp: new Date().toISOString(),\n                variant: purchase.variants === '' ? null : purchase.variants\n            };\n        }\n        catch (_a) {\n            return Object.assign(Object.assign({}, emptyLicense), { result: 'ENDPOINT_DOWN' });\n        }\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst DEFAULT_KEY = 'totalUseCount';\n/**\n * Returns the plugin’s total use count.\n *\n * @param key  The key in [`figma.clientStorage`](https://figma.com/plugin-docs/api/figma-clientStorage/)\n * on which to store the use count. Defaults to `'totalUseCount'`.\n * @category Monetization\n */\nexport function getTotalUseCountAsync(key = DEFAULT_KEY) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const useCount = yield figma.clientStorage.getAsync(key);\n        if (typeof useCount === 'undefined') {\n            return 0;\n        }\n        return useCount;\n    });\n}\n/**\n * Increments the plugin’s total use count.\n *\n * @param key  The key in [`figma.clientStorage`](https://figma.com/plugin-docs/api/figma-clientStorage/)\n * on which to store the use count. Defaults to `'totalUseCount'`.\n * @returns Returns the plugin’s new total use count.\n * @category Monetization\n */\nexport function incrementTotalUseCountAsync(key = DEFAULT_KEY) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const useCount = yield getTotalUseCountAsync(key);\n        const newUseCount = useCount + 1;\n        yield figma.clientStorage.setAsync(key, newUseCount);\n        return newUseCount;\n    });\n}\n/**\n * Resets the plugin’s total use count to `0`.\n *\n * @param key  The key in [`figma.clientStorage`](https://figma.com/plugin-docs/api/figma-clientStorage/)\n * on which to store the use count. Defaults to `'totalUseCount'`.\n * @category Monetization\n */\nexport function resetTotalUseCountAsync(key = DEFAULT_KEY) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield figma.clientStorage.setAsync(key, 0);\n    });\n}\n","/**\n * Returns the `x` and `y` position of the given `node` relative to the page.\n *\n * @returns Returns a [`Vector`](https://figma.com/plugin-docs/api/Vector/).\n * @category Node\n */\nexport function getAbsolutePosition(node) {\n    return {\n        x: node.absoluteTransform[0][2],\n        y: node.absoluteTransform[1][2]\n    };\n}\n","/**\n * Moves the `node` to the given `x` and `y` position relative to the page.\n * At least one of `x` or `y` of `vector` must be specified.\n *\n * @category Node\n */\nexport function setAbsolutePosition(node, vector) {\n    if (typeof vector.x === 'undefined' && typeof vector.y === 'undefined') {\n        throw new Error('Need at least one of `x` or `y`');\n    }\n    let x = typeof vector.x === 'undefined' ? null : vector.x;\n    let y = typeof vector.y === 'undefined' ? null : vector.y;\n    let parentNode = node.parent;\n    while (parentNode !== null && parentNode.type !== 'PAGE') {\n        if (parentNode.type === 'FRAME' || parentNode.type === 'SECTION') {\n            if (x !== null) {\n                x = x - parentNode.x;\n            }\n            if (y !== null) {\n                y = y - parentNode.y;\n            }\n        }\n        parentNode = parentNode.parent;\n    }\n    if (x !== null) {\n        node.x = x;\n    }\n    if (y !== null) {\n        node.y = y;\n    }\n}\n","import { traverseNode } from './traverse-node';\n/**\n * Collapses `node` and all its child nodes in the layer list.\n *\n * @returns Returns `true` if at least one layer in the layer list was\n * collapsed by the function, else `false`.\n * @category Node\n */\nexport function collapseLayer(node) {\n    let didChange = false;\n    traverseNode(node, function (node) {\n        if ('expanded' in node && node.expanded === true) {\n            node.expanded = false;\n            didChange = true;\n        }\n    });\n    return didChange;\n}\n","import { getAbsolutePosition } from './absolute-position/get-absolute-position';\nimport { getParentNode } from './get-nodes/get-parent-node';\n/**\n * Computes the coordinates (`x`, `y`) and dimensions (`width`, `height`) of\n * the smallest bounding box that contains the given `node`. (Does not account\n * for strokes or effects that could extend beyond the node’s bounding box.)\n *\n * @returns Returns the bounding box as a [`Rect`](https://figma.com/plugin-docs/api/Rect/).\n * @category Node\n */\nexport function computeBoundingBox(node) {\n    if ('rotation' in node && node.rotation === 0) {\n        const absolutePosition = getAbsolutePosition(node);\n        const { width, height } = node;\n        return Object.assign(Object.assign({}, absolutePosition), { height, width });\n    }\n    const parentNode = getParentNode(node);\n    const index = parentNode.children.indexOf(node);\n    const group = figma.group([node], parentNode, index);\n    const absolutePosition = getAbsolutePosition(group);\n    const { width, height } = group;\n    parentNode.insertChild(index, node);\n    return Object.assign(Object.assign({}, absolutePosition), { height, width });\n}\n","import { computeBoundingBox } from './compute-bounding-box';\n/**\n * Computes the absolute coordinates of the top-left and bottom-right\n * corners of the smallest bounding box that contains the given `nodes`.\n * (Does not account for strokes or effects that could extend beyond the\n * nodes’ bounding box.)\n *\n * @returns Returns an array of two [`Vector`](https://figma.com/plugin-docs/api/Vector/)\n * objects, one for the top-left corner and another for the\n * bottom-right corner.\n * @category Node\n */\nexport function computeMaximumBounds(nodes) {\n    let maximumBounds = [\n        {\n            x: Number.MAX_VALUE,\n            y: Number.MAX_VALUE\n        },\n        {\n            x: -1 * Number.MAX_VALUE,\n            y: -1 * Number.MAX_VALUE\n        }\n    ];\n    for (const node of nodes) {\n        const { x, y, width, height } = computeBoundingBox(node);\n        maximumBounds = [\n            {\n                x: Math.min(maximumBounds[0].x, x),\n                y: Math.min(maximumBounds[0].y, y)\n            },\n            {\n                x: Math.max(maximumBounds[1].x, x + width),\n                y: Math.max(maximumBounds[1].y, y + height)\n            }\n        ];\n    }\n    return maximumBounds;\n}\n","/**\n * Returns the result of deduplicating the nodes in `nodes`. Does not modify\n * the original `nodes` array.\n *\n * @returns Returns a new array of unique `SceneNode` objects.\n * @category Node\n */\nexport function deduplicateNodes(nodes) {\n    const result = {};\n    for (const node of nodes) {\n        result[node.id] = node;\n    }\n    return Object.values(result);\n}\n","import { traverseNode } from '../traverse-node';\n/**\n * Returns all the local Components in the current document.\n *\n * @category Node\n */\nexport function getDocumentComponents() {\n    const result = [];\n    for (const page of figma.root.children) {\n        for (const node of page.children) {\n            traverseNode(node, function (node) {\n                if (node.type === 'COMPONENT') {\n                    result.push(node);\n                }\n            }, function (node) {\n                const { type } = node;\n                return type === 'COMPONENT' || type === 'FRAME' || type === 'GROUP';\n            });\n        }\n    }\n    return result;\n}\n","/**\n * Returns the parent node of the given `node`.\n *\n * @returns Throws an error if `node.parent` is `null`, else returns\n * `node.parent`.\n * @category Node\n */\nexport function getParentNode(node) {\n    const parentNode = node.parent;\n    if (parentNode === null) {\n        throw new Error(`\\`node.parent\\` is \\`null\\``);\n    }\n    return parentNode;\n}\n","/**\n * Returns the `SceneNode` in the current document with the given `id`. This\n * is a convenience function that wraps the [`figma.getNodeById`](https://figma.com/plugin-docs/api/figma/#getnodebyid)\n * function.\n *\n * @returns Throws an error if no `SceneNode` with the given `id` exists, else\n * returns the node cast to the specified `Node` type parameter.\n * @category Node\n */\nexport function getSceneNodeById(id) {\n    const node = figma.getNodeById(id);\n    if (node === null) {\n        throw new Error(`No node found with \\`id\\`: ${id}`);\n    }\n    if (node.type === 'DOCUMENT' || node.type === 'PAGE') {\n        throw new Error('`node` is not a `SceneNode`');\n    }\n    return node;\n}\n","/**\n * Returns the selected nodes, or all the top-level nodes on the current page\n * if no nodes are selected.\n *\n * @category Node\n */\nexport function getSelectedNodesOrAllNodes() {\n    const selectedNodes = figma.currentPage.selection;\n    if (selectedNodes.length > 0) {\n        return selectedNodes.slice();\n    }\n    return figma.currentPage.children.slice();\n}\n","import { getParentNode } from '../get-nodes/get-parent-node';\n/**\n * Inserts `node` *after* the `referenceNode` in the layer list.\n *\n * @category Node\n */\nexport function insertAfterNode(node, referenceNode) {\n    const parentNode = getParentNode(referenceNode);\n    const index = parentNode.children.indexOf(referenceNode);\n    parentNode.insertChild(index, node);\n}\n","import { getParentNode } from '../get-nodes/get-parent-node';\n/**\n * Inserts `node` *before* the `referenceNode` in the layer list.\n *\n * @category Node\n */\nexport function insertBeforeNode(node, referenceNode) {\n    const parentNode = getParentNode(referenceNode);\n    const index = parentNode.children.indexOf(referenceNode);\n    parentNode.insertChild(index + 1, node);\n}\n","/**\n * Checks if the given `node` is locked.\n *\n * @returns Returns `true` if the `node` or one of its parent nodes is locked,\n * else `false`.\n * @category Node\n */\nexport function isLocked(node) {\n    if (node.locked === true) {\n        return true;\n    }\n    if (node.parent === null || node.parent.type === 'PAGE') {\n        return false;\n    }\n    return isLocked(node.parent);\n}\n","/**\n * Checks if the given `node` is visible.\n *\n * @returns Returns `true` if the `node` and all its parent nodes are visible,\n * else `false`.\n * @category Node\n */\nexport function isVisible(node) {\n    if (node.visible === false) {\n        return false;\n    }\n    if (node.parent === null || node.parent.type === 'PAGE') {\n        return true;\n    }\n    return isVisible(node.parent);\n}\n","/**\n * Checks if the given `node` is within an Instance node.\n *\n * @returns Returns `true` if the `node` is within an Instance node,\n * else `false`.\n * @category Node\n */\nexport function isWithinInstanceNode(node) {\n    const parentNode = node.parent;\n    if (parentNode === null ||\n        parentNode.type === 'DOCUMENT' ||\n        parentNode.type === 'PAGE') {\n        return false;\n    }\n    if (parentNode.type === 'INSTANCE') {\n        return true;\n    }\n    return isWithinInstanceNode(parentNode);\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * Loads the fonts used in all the text nodes within the `nodes` array. [This\n * function must be called before modifying any property of a text node that\n * may cause the rendered text to change.](https://www.figma.com/plugin-docs/working-with-text/#loading-fonts)\n *\n * @category Node\n */\nexport function loadFontsAsync(nodes) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const result = {};\n        for (const node of nodes) {\n            switch (node.type) {\n                case 'CONNECTOR':\n                case 'SHAPE_WITH_TEXT':\n                case 'STICKY': {\n                    collectFontsUsedInNode(node.text, result);\n                    break;\n                }\n                case 'TEXT': {\n                    collectFontsUsedInNode(node, result);\n                    break;\n                }\n            }\n        }\n        yield Promise.all(Object.values(result).map(function (font) {\n            return figma.loadFontAsync(font);\n        }));\n    });\n}\nfunction collectFontsUsedInNode(node, result) {\n    const length = node.characters.length;\n    if (length === 0) {\n        const fontName = node.fontName;\n        const key = createKey(fontName);\n        if (key in result) {\n            return;\n        }\n        result[key] = fontName;\n        return;\n    }\n    let i = -1;\n    while (++i < length) {\n        const fontName = node.getRangeFontName(i, i + 1);\n        const key = createKey(fontName);\n        if (key in result) {\n            continue;\n        }\n        result[key] = fontName;\n    }\n}\nfunction createKey(fontName) {\n    return `${fontName.family}-${fontName.style}`;\n}\n","const RELAUNCH_BUTTONS_PLUGIN_DATA_KEY = 'relaunchButtons';\nexport function getRelaunchButtonsData(node) {\n    const pluginData = node.getPluginData(RELAUNCH_BUTTONS_PLUGIN_DATA_KEY);\n    if (pluginData === '') {\n        return {};\n    }\n    return JSON.parse(pluginData);\n}\nexport function setRelaunchButtonsData(node, relaunchButtonsData) {\n    if (Object.keys(relaunchButtonsData).length === 0) {\n        node.setPluginData(RELAUNCH_BUTTONS_PLUGIN_DATA_KEY, '');\n        return;\n    }\n    node.setPluginData(RELAUNCH_BUTTONS_PLUGIN_DATA_KEY, JSON.stringify(relaunchButtonsData));\n}\n","import { getRelaunchButtonsData, setRelaunchButtonsData } from './private/update-relaunch-buttons-data';\n/**\n * Sets a [relaunch button](https://figma.com/plugin-docs/api/properties/nodes-setrelaunchdata/)\n * on `node` for the command with the given `relaunchButtonId` as configured\n * under the [**`\"relaunchButtons\"`**](<%- query('page', 'configuration').url %>#relaunchbuttons) key in `package.json`.\n * Any relaunch buttons set previously will be retained.\n *\n * See the [recipe for configuring relaunch buttons](<%- query('page', 'recipes').url %>#configuring-relaunch-buttons).\n *\n * @param options.description  The text to display below the relaunch button\n * in the Figma UI.\n * @category Node\n */\nexport function setRelaunchButton(node, relaunchButtonId, options = { description: '' }) {\n    const relaunchButtonsData = Object.assign(Object.assign({}, getRelaunchButtonsData(node)), { [relaunchButtonId]: options.description });\n    setRelaunchButtonsData(node, relaunchButtonsData);\n    node.setRelaunchData(relaunchButtonsData);\n}\n","import { getRelaunchButtonsData, setRelaunchButtonsData } from './private/update-relaunch-buttons-data';\n/**\n * Unsets the [relaunch button](https://figma.com/plugin-docs/api/properties/nodes-setrelaunchdata/)\n * on `node` for the command with the given `relaunchButtonId`. If\n * `relaunchButtonId` is not specified, unsets all relaunch buttons on `node`.\n *\n * @category Node\n */\nexport function unsetRelaunchButton(node, relaunchButtonId) {\n    if (typeof relaunchButtonId === 'undefined') {\n        setRelaunchButtonsData(node, {});\n        node.setRelaunchData({});\n        return;\n    }\n    const relaunchButtonsData = getRelaunchButtonsData(node);\n    if (typeof relaunchButtonsData[relaunchButtonId] !== 'undefined') {\n        delete relaunchButtonsData[relaunchButtonId];\n    }\n    setRelaunchButtonsData(node, relaunchButtonsData);\n    node.setRelaunchData(relaunchButtonsData);\n}\n","import { getParentNode } from '../get-nodes/get-parent-node';\n/**\n * Checks if all nodes in `nodes` are sibling nodes.\n *\n * @returns Returns `true` if all nodes in `nodes` are sibling nodes,\n * else `false`.\n * @category Node\n */\nexport function areSiblingNodes(nodes) {\n    if (nodes.length < 2) {\n        return true;\n    }\n    const [firstNode, ...rest] = nodes;\n    const firstParentNode = getParentNode(firstNode);\n    for (const node of rest) {\n        if (node.parent === null || node.parent.id !== firstParentNode.id) {\n            return false;\n        }\n    }\n    return true;\n}\n","import { getParentNode } from '../get-nodes/get-parent-node';\n/**\n * Splits `nodes` into groups of sibling nodes.\n *\n * @returns Returns an array of array of sibling `SceneNode` objects.\n * @category Node\n */\nexport function computeSiblingNodes(nodes) {\n    const groups = resolveGroups(nodes);\n    const result = [];\n    for (const group of groups) {\n        const parentNode = getParentNode(group[0]);\n        const siblingNodes = group\n            .map(function (node) {\n            return {\n                index: parentNode.children.indexOf(node),\n                node\n            };\n        })\n            .sort(function (a, b) {\n            return a.index - b.index;\n        })\n            .map(function ({ node }) {\n            return node;\n        });\n        result.push(siblingNodes);\n    }\n    return result;\n}\nfunction resolveGroups(nodes) {\n    const result = {};\n    for (const node of nodes) {\n        const parentNode = getParentNode(node);\n        const parentId = parentNode.id;\n        if (parentId in result === false) {\n            result[parentId] = [];\n        }\n        result[parentId].push(node);\n    }\n    return Object.values(result);\n}\n","import { getParentNode } from '../get-nodes/get-parent-node';\nimport { areSiblingNodes } from '../sibling-nodes/are-sibling-nodes';\n/**\n * Returns the result of sorting the nodes in `siblingNodes` by\n * their layer list order. Does not modify the original\n * `siblingNodes` array.\n *\n * @returns Returns a new array of `SceneNode` objects.\n * @category Node\n */\nexport function sortNodesByCanonicalOrder(siblingNodes) {\n    if (siblingNodes.length < 2) {\n        return siblingNodes.slice();\n    }\n    const parentNode = getParentNode(siblingNodes[0]);\n    if (areSiblingNodes(siblingNodes) === false) {\n        throw new Error('Nodes in `siblingNodes` do not have the same parent');\n    }\n    return siblingNodes\n        .slice()\n        .map(function (node) {\n        return {\n            index: parentNode.children.indexOf(node),\n            node\n        };\n    })\n        .sort(function (a, b) {\n        return a.index - b.index;\n    })\n        .map(function ({ node }) {\n        return node;\n    });\n}\n","import naturalCompare from 'natural-compare-lite';\n/**\n * Returns the result of sorting `nodes` in alphabetical order. Does not\n * modify the original `nodes` array.\n *\n * @returns Returns a new array of `SceneNode` objects.\n * @category Node\n */\nexport function sortNodesByName(nodes) {\n    if (nodes.length < 2) {\n        return nodes.slice();\n    }\n    return nodes.slice().sort(function (a, b) {\n        const aName = a.name.toLowerCase();\n        const bName = b.name.toLowerCase();\n        if (aName !== bName) {\n            return naturalCompare(bName, aName);\n        }\n        const y = b.y - a.y;\n        if (y !== 0) {\n            return y;\n        }\n        const x = b.x - a.x;\n        if (x !== 0) {\n            return x;\n        }\n        return naturalCompare(b.id, a.id);\n    });\n}\n","import { compareStringArrays } from '../../object/compare-string-arrays';\nimport { getParentNode } from '../get-nodes/get-parent-node';\nimport { areSiblingNodes } from '../sibling-nodes/are-sibling-nodes';\n/**\n * Updates the layer list sort order to follow the sort order of the nodes\n * in the `siblingNodes` array. Does not modify the original `siblingNodes`\n * array.\n *\n * @returns Returns `true` if the layer list sort order was changed by the\n * function, else `false`.\n * @category Node\n */\nexport function updateNodesSortOrder(siblingNodes) {\n    const parentNode = getParentNode(siblingNodes[0]);\n    if (areSiblingNodes(siblingNodes) === false) {\n        throw new Error('Nodes in `siblingNodes` do not have the same parent');\n    }\n    const siblingNodesCopy = siblingNodes.slice();\n    const ids = parentNode.children.map(function ({ id }) {\n        return id;\n    });\n    const insertIndex = computeInsertIndex(siblingNodesCopy, ids);\n    for (const node of siblingNodesCopy) {\n        parentNode.insertChild(insertIndex, node);\n    }\n    const idsAfter = parentNode.children.map(function ({ id }) {\n        return id;\n    });\n    return compareStringArrays(ids, idsAfter) === false;\n}\nfunction computeInsertIndex(nodes, ids) {\n    let insertIndex = -1;\n    for (const node of nodes) {\n        const index = ids.indexOf(node.id);\n        if (index > insertIndex) {\n            insertIndex = index;\n        }\n    }\n    return insertIndex + 1;\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * An `async` version of [`traverseNode`](#traversenodenode-processnode--stoptraversal),\n * in which both callbacks are `async`.\n *\n * @category Node\n */\nexport function traverseNodeAsync(node, processNodeAsync, stopTraversalAsync) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (node.removed === true) {\n            return;\n        }\n        if ('children' in node &&\n            (typeof stopTraversalAsync !== 'function' ||\n                (yield stopTraversalAsync(node)) === false)) {\n            for (const childNode of node.children) {\n                yield traverseNodeAsync(childNode, processNodeAsync, stopTraversalAsync);\n            }\n        }\n        yield processNodeAsync(node);\n    });\n}\n","/**\n * Traverses `node` and its child nodes recursively in a *depth-first*\n * manner, passing each node to the specified `processNode` callback.\n *\n * Each node is also passed to a `stopTraversal` function. If you return\n * `true` in `stopTraversal` for a particular node, then its child nodes\n * will not be traversed.\n *\n * @category Node\n */\nexport function traverseNode(node, processNode, stopTraversal) {\n    if (node.removed === true) {\n        return;\n    }\n    if ('children' in node &&\n        (typeof stopTraversal !== 'function' || stopTraversal(node) === false)) {\n        for (const childNode of node.children) {\n            traverseNode(childNode, processNode, stopTraversal);\n        }\n    }\n    processNode(node);\n}\n","import { invalidCharactersRegex, numbersRegex, operatorRegex, operatorSuffixRegex } from './private/regex';\n/**\n * Evaluates the given numeric `expression`.\n *\n * @returns Returns the result of evaluating the given numeric `expression`,\n * else `null` for an invalid expression.\n * @category Number\n */\nexport function evaluateNumericExpression(value) {\n    if (value === '' || numbersRegex.test(value) === false || invalidCharactersRegex.test(value) === true) {\n        return null;\n    }\n    if (operatorRegex.test(value) === true) {\n        if (operatorSuffixRegex.test(value) === true) {\n            // Drop the operator suffix\n            return eval(value.substring(0, value.length - 1)); // eslint-disable-line no-eval\n        }\n        return eval(value); // eslint-disable-line no-eval\n    }\n    return parseFloat(value);\n}\n","import { floatOperandRegex, integerOperandRegex, operatorRegex } from './private/regex';\n/**\n * Checks if `value` is a numeric expression, as input by a user. “Partial”\n * inputs are considered valid.\n *\n * @param options.integersOnly  Set to `true` to check that the expression\n * contains only integers. Defaults to `false`.\n * @returns Returns `true` if `value` is a valid numeric expression,\n * else `false`.\n * @category Number\n */\nexport function isValidNumericInput(value, options = { integersOnly: false }) {\n    const split = (value[0] === '-' ? value.substring(1) : value).split(operatorRegex);\n    let i = -1;\n    while (++i < split.length) {\n        const operand = split[i];\n        if ((operand === '' && i !== split.length - 1) ||\n            (options.integersOnly === true ? integerOperandRegex : floatOperandRegex).test(operand) === false) {\n            return false;\n        }\n    }\n    return true;\n}\n","export const floatOperandRegex = /^-?\\d*(?:\\.\\d*)?$/;\nexport const integerOperandRegex = /^-?\\d*$/;\nexport const operatorRegex = /[+\\-*/]/;\nexport const operatorSuffixRegex = /[+\\-*/]$/;\nexport const numbersRegex = /\\d/;\nexport const invalidCharactersRegex = /[^\\d.+\\-*/]/;\n","/**\n * Creates a deep copy of the given object.\n *\n * @category Object\n */\nexport function cloneObject(object) {\n    if (object === null ||\n        typeof object === 'undefined' ||\n        typeof object === 'boolean' ||\n        typeof object === 'number' ||\n        typeof object === 'string') {\n        return object;\n    }\n    if (Array.isArray(object)) {\n        const result = [];\n        for (const value of object) {\n            result.push(cloneObject(value));\n        }\n        return result;\n    }\n    const result = {};\n    for (const key in object) {\n        result[key] = cloneObject(object[key]);\n    }\n    return result;\n}\n","/**\n * Performs a *deep* equality comparison of objects `a` and `b`.\n *\n * @returns Returns `true` if `a` and `b` are the same, else `false`.\n * @category Object\n */\nexport function compareObjects(a, b) {\n    if (a === null ||\n        typeof a === 'undefined' ||\n        typeof a === 'boolean' ||\n        typeof a === 'number' ||\n        typeof a === 'string') {\n        return a === b;\n    }\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b)) {\n            return false;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (const index in a) {\n            if (compareObjects(a[index], b[index]) === false) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (b === null ||\n        typeof b === 'undefined' ||\n        typeof b === 'boolean' ||\n        typeof b === 'number' ||\n        typeof b === 'string' ||\n        Array.isArray(b)) {\n        return false;\n    }\n    if (Object.keys(a).length !== Object.keys(b).length) {\n        return false;\n    }\n    for (const key in a) {\n        if (compareObjects(a[key], b[key]) === false) {\n            return false;\n        }\n    }\n    return true;\n}\n","/**\n * Compares the string arrays `a` and `b`.\n *\n * @returns Returns `true` if `a` and `b` are the same, else `false`.\n * @category Object\n */\nexport function compareStringArrays(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (const index in a) {\n        if (a[index] !== b[index]) {\n            return false;\n        }\n    }\n    return true;\n}\n","/**\n * Returns the result of deduplicating the given `array`. Does not modify the\n * original `array`.\n *\n * @returns Returns a new array with unique values.\n * @category Object\n */\nexport function deduplicateArray(array) {\n    const object = {};\n    const result = [];\n    for (const value of array) {\n        if (object[`${value}`] === true) {\n            continue;\n        }\n        object[`${value}`] = true;\n        result.push(value);\n    }\n    return result;\n}\n","/**\n * Extracts the specified list of `attributes` from the given `array` of\n * plain objects.\n *\n * @returns Returns an array of plain objects.\n * @category Object\n */\nexport function extractAttributes(array, attributes) {\n    const result = [];\n    for (const object of array) {\n        result.push(pick(object, attributes));\n    }\n    return result;\n}\nfunction pick(object, keys) {\n    const result = {};\n    for (const key of keys) {\n        const value = object[key];\n        if (typeof value === 'undefined') {\n            throw new Error(`Key \\`${String(key)}\\` does not exist on \\`object\\``);\n        }\n        result[key] = value;\n    }\n    return result;\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst DEFAULT_SETTINGS_KEY = 'settings';\n/**\n * Loads your plugin/widget’s settings (stored locally on the user’s computer under\n * the given `settingsKey`).\n *\n * @param settingsKey  The key in [`figma.clientStorage`](https://figma.com/plugin-docs/api/figma-clientStorage/)\n * on which to store the settings. Defaults to `'settings'`.\n * @category Settings\n */\nexport function loadSettingsAsync(defaultSettings, settingsKey = DEFAULT_SETTINGS_KEY) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const settings = yield figma.clientStorage.getAsync(settingsKey);\n        if (typeof settings === 'undefined') {\n            return defaultSettings;\n        }\n        return Object.assign({}, defaultSettings, settings);\n    });\n}\n/**\n * Saves the given `settings` for your plugin/widget (stored locally on the user’s\n * computer under the given `settingsKey`).\n *\n * @param settingsKey  The key in [`figma.clientStorage`](https://figma.com/plugin-docs/api/figma-clientStorage/)\n * on which to store the settings. Defaults to `'settings'`.\n * @category Settings\n */\nexport function saveSettingsAsync(settings, settingsKey = DEFAULT_SETTINGS_KEY) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield figma.clientStorage.setAsync(settingsKey, settings);\n    });\n}\n","const CHECK = '✔';\nconst CROSS = '✘';\nconst WARNING = '⚠';\nconst SPACE = '\\u00a0';\n/**\n * Adds a `✔` prefix to the given `message`.\n *\n * @category String\n */\nexport function formatSuccessMessage(message) {\n    return `${CHECK} ${SPACE} ${message}`;\n}\n/**\n * Adds a `✘` prefix to the given `message`.\n *\n * @category String\n */\nexport function formatErrorMessage(message) {\n    return `${CROSS} ${SPACE} ${message}`;\n}\n/**\n * Adds a `⚠` prefix to the given `message`.\n *\n * @category String\n */\nexport function formatWarningMessage(message) {\n    return `${WARNING} ${SPACE} ${message}`;\n}\n","/**\n * Returns `singular` if `number` is exactly `1`, else returns `plural`.\n * `plural` defaults to `` `${singular}s` `` if not specified.\n *\n * @category String\n */\nexport function pluralize(number, singular, plural) {\n    if (number === 1) {\n        return singular;\n    }\n    return typeof plural === 'undefined' ? `${singular}s` : plural;\n}\n","/**\n * Renders the UI correponding to the command in a modal within the Figma UI.\n * Specify the modal’s `width`, `height`, `title`, and whether it is `visible`\n * via [`options`](https://figma.com/plugin-docs/api/properties/figma-showui/).\n * Optionally pass on some initialising `data` from the command to the UI.\n *\n * Learn how to [add a UI to your plugin/widget](<%- query('page', 'ui').url %>).\n *\n * @category UI\n */\nexport function showUI(options, data) {\n    if (typeof __html__ === 'undefined') {\n        throw new Error('No UI defined');\n    }\n    console.log(\"showUI 2222222222222\");\n    //  const html = `<div id=\"create-figma-plugin\"></div><script>document.body.classList.add('theme-${\n    const html = `<div id=\"create-figma-plugin\"></div><script>document.body.classList.add('theme-${figma.editorType}');const __FIGMA_COMMAND__='${typeof figma.command === 'undefined' ? '' : figma.command}';const __SHOW_UI_DATA__=${JSON.stringify(typeof data === 'undefined' ? {} : data)};${__html__}</script>`;\n    figma.showUI(html, Object.assign(Object.assign({}, options), { themeColors: typeof options.themeColors === 'undefined' ? true : options.themeColors }));\n}\n","const hexCharacters = 'a-f\\\\d';\nconst match3or4Hex = `#?[${hexCharacters}]{3}[${hexCharacters}]?`;\nconst match6or8Hex = `#?[${hexCharacters}]{6}([${hexCharacters}]{2})?`;\nconst nonHexChars = new RegExp(`[^#${hexCharacters}]`, 'gi');\nconst validHexSize = new RegExp(`^${match3or4Hex}$|^${match6or8Hex}$`, 'i');\n\nexport default function hexRgb(hex, options = {}) {\n\tif (typeof hex !== 'string' || nonHexChars.test(hex) || !validHexSize.test(hex)) {\n\t\tthrow new TypeError('Expected a valid hex string');\n\t}\n\n\thex = hex.replace(/^#/, '');\n\tlet alphaFromHex = 1;\n\n\tif (hex.length === 8) {\n\t\talphaFromHex = Number.parseInt(hex.slice(6, 8), 16) / 255;\n\t\thex = hex.slice(0, 6);\n\t}\n\n\tif (hex.length === 4) {\n\t\talphaFromHex = Number.parseInt(hex.slice(3, 4).repeat(2), 16) / 255;\n\t\thex = hex.slice(0, 3);\n\t}\n\n\tif (hex.length === 3) {\n\t\thex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n\t}\n\n\tconst number = Number.parseInt(hex, 16);\n\tconst red = number >> 16;\n\tconst green = (number >> 8) & 255;\n\tconst blue = number & 255;\n\tconst alpha = typeof options.alpha === 'number' ? options.alpha : alphaFromHex;\n\n\tif (options.format === 'array') {\n\t\treturn [red, green, blue, alpha];\n\t}\n\n\tif (options.format === 'css') {\n\t\tconst alphaString = alpha === 1 ? '' : ` / ${Number((alpha * 100).toFixed(2))}%`;\n\t\treturn `rgb(${red} ${green} ${blue}${alphaString})`;\n\t}\n\n\treturn {red, green, blue, alpha};\n}\n","// TODO: Remove this ignore comment.\n// eslint-disable-next-line no-mixed-operators\nconst toHex = (red, green, blue, alpha) => ((blue | green << 8 | red << 16) | 1 << 24).toString(16).slice(1) + alpha;\n\nexport default function rgbHex(red, green, blue, alpha) {\n\tlet isPercent = (red + (alpha || '')).toString().includes('%');\n\n\tif (typeof red === 'string' && !green) { // Single string parameter.\n\t\tconst parsed = parseCssRgbString(red);\n\t\tif (!parsed) {\n\t\t\tthrow new TypeError('Invalid or unsupported color format.');\n\t\t}\n\n\t\tisPercent = false;\n\t\t[red, green, blue, alpha] = parsed;\n\t} else if (alpha !== undefined) {\n\t\talpha = Number.parseFloat(alpha);\n\t}\n\n\tif (typeof red !== 'number' ||\n\t\ttypeof green !== 'number' ||\n\t\ttypeof blue !== 'number' ||\n\t\tred > 255 ||\n\t\tgreen > 255 ||\n\t\tblue > 255\n\t) {\n\t\tthrow new TypeError('Expected three numbers below 256');\n\t}\n\n\tif (typeof alpha === 'number') {\n\t\tif (!isPercent && alpha >= 0 && alpha <= 1) {\n\t\t\talpha = Math.round(255 * alpha);\n\t\t} else if (isPercent && alpha >= 0 && alpha <= 100) {\n\t\t\talpha = Math.round(255 * alpha / 100);\n\t\t} else {\n\t\t\tthrow new TypeError(`Expected alpha value (${alpha}) as a fraction or percentage`);\n\t\t}\n\n\t\talpha = (alpha | 1 << 8).toString(16).slice(1); // eslint-disable-line no-mixed-operators\n\t} else {\n\t\talpha = '';\n\t}\n\n\treturn toHex(red, green, blue, alpha);\n}\n\nconst parseCssRgbString = input => {\n\tconst parts = input.replace(/rgba?\\(([^)]+)\\)/, '$1').split(/[,\\s/]+/).filter(Boolean);\n\tif (parts.length < 3) {\n\t\treturn;\n\t}\n\n\tconst parseValue = (value, max) => {\n\t\tvalue = value.trim();\n\n\t\tif (value.endsWith('%')) {\n\t\t\treturn Math.min(Number.parseFloat(value) * max / 100, max);\n\t\t}\n\n\t\treturn Math.min(Number.parseFloat(value), max);\n\t};\n\n\tconst red = parseValue(parts[0], 255);\n\tconst green = parseValue(parts[1], 255);\n\tconst blue = parseValue(parts[2], 255);\n\tlet alpha;\n\n\tif (parts.length === 4) {\n\t\talpha = parseValue(parts[3], 1);\n\t}\n\n\treturn [red, green, blue, alpha];\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { on } from 'utilities';\nimport './app/PdfBuilder';\n/* async function getLocalFonts(){\n    console.log('getLocalFonts ', globalThis);\n    //@ts-ignore\n    const array = await globalThis.parent.queryLocalFonts();\n    array.forEach(async (font: { postscriptName: any; fullName: any; family: any; style: any; }) => {\n        console.log(font.postscriptName);\n    } );\n}\ngetLocalFonts(); */\nfunction showUI(options, data) {\n    if (typeof __html__ === 'undefined') {\n        throw new Error('No UI defined');\n    }\n    //console.log(\"showUI------------------------\", figma, options);\n    //globalThis.process.env.NODE_DEBUG=\"no\";\n    //const html = `<div></div><script>document.body.classList.add('theme-${\n    const html = `<div id=\"create-figma-plugin\"></div><script>document.body.classList.add('theme-${figma.editorType}');const __FIGMA_COMMAND__='${typeof figma.command === 'undefined' ? '' : figma.command}';const __SHOW_UI_DATA__=${JSON.stringify(typeof data === 'undefined' ? {} : data)};</script><script>__FIGMA__MKITFPDF=true;</script>${__html__}`;\n    figma.showUI(html, Object.assign(Object.assign({}, options), { themeColors: true }));\n}\nshowUI({\n    height: 480,\n    width: 480,\n});\non('RESIZE_WINDOW', function (windowSize) {\n    //@ts-ignore\n    const { width, height } = windowSize;\n    figma.ui.resize(width, height);\n});\n/* \"currentpagechange\"\n\"drop\"\n\"close\"\n\"run\" */\n// figma.on(\"documentchange\", (event) => {\n//   for (const change of event.documentChanges) {\n//     switch (change.type) {\n//       case \"CREATE\":\n//         console.log(`Node ${change.id} created by a ${change.origin.toLowerCase()} user`);\n//         break;\n//       case \"DELETE\":\n//         console.log(`Node ${change.id} deleted by a ${change.origin.toLowerCase()} user`);\n//         break;\n//       case \"PROPERTY_CHANGE\":\n//         for (const prop of change.properties) {\n//           console.log(`Node ${change.id} had ${prop} changed by a ${change.origin.toLowerCase()} user`);\n//         }\n//         break;\n//       case \"STYLE_CREATE\":\n//         console.log(`Style ${change.id} created by a ${change.origin.toLowerCase()} user`);\n//         break;\n//       case \"STYLE_DELETE\":\n//         console.log(`Style ${change.id} deleted by a ${change.origin.toLowerCase()} user`);\n//         break;\n//       case \"STYLE_PROPERTY_CHANGE\":\n//         for (const prop of change.properties) {\n//           console.log(`Style ${change.id} had ${prop} changed by a ${change.origin.toLowerCase()} user`);\n//         }\n//         break;\n//     }\n//   }\n// });\nfigma.clientStorage\n    .getAsync('size')\n    .then((size) => {\n    if (size)\n        figma.ui.resize(size.w, size.h);\n})\n    .catch((err) => { });\n"],"names":[],"sourceRoot":""}
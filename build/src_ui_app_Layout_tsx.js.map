{"version":3,"file":"src_ui_app_Layout_tsx.js","mappings":";;;;;;;;;;;;;;;;;;;AAA+D;AAClC;AAC6B;AAC1D,iBAAiB,2CAAI,OAAO,2VAAsC;AAClE,mBAAmB,2CAAI,OAAO,+gBAAiC;AAC/D,iBAAiB,2CAAI,OAAO,qUAA2B;AACvD;AACA,YAAY,uDAAK,CAAC,oDAAM,IAAI,qDAAqD,sDAAI,aAAa,GAAG,uDAAK,CAAC,oDAAM,IAAI,qDAAqD,sDAAI,CAAC,oDAAM,IAAI,GAAG,sDAAI,aAAa,IAAI,GAAG,sDAAI,eAAe,IAAI;AAC3O;AACA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;;;;;;ACTtB;AACmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAQ;AACd;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AASE;;;;;;;;;;;;;;;;;;AC1DF;AACA,CAE8B;;AAE9B;AAC+C;AACP;AACxC,aAAa,6DAAU,iCAAiC,sDAAG,CAAC,sDAAK,IAAI,kDAAkD;AACvH;;AAIE;AACF;;;;;;;;;;;;;;;ACdA;;AAEA;AACA,CAA4D;AAC5D;AACA,UAAU,qBAAqB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0EAAa;AACtB;AACA;AACA;AACA;AACA;;AAIE;AACF;;;;;;;;;;;;;;;AC3CA;;AAEA;AACA,CAA2C;AAC3C,aAAa,yDAAM;AACnB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAIE;AACF;;;;;;;;;;;;;;;;;AChBA;AACA,CAE8B;;AAE9B;AAC+C;AACP;AACxC,aAAa,6DAAU,iCAAiC,sDAAG,CAAC,sDAAK,IAAI,qDAAqD;AAC1H;;AAIE;AACF;;;;;;;;;;;;;;;;ACdA;;AAEA;AACA,CAA2C;AACH;AACxC,2CAA2C,sDAAG;AAC9C,EAAE,qDAAM;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIE;AACF;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA,CAE8B;AAGA;;AAE9B;AACmE;AACtB;AAIlB;AAC6B;AACV;AAC9C,YAAY,6DAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,uBAAuB,8CAAO;AAC9B,UAAU,qEAAgB,GAAG,oBAAoB;AACjD;AACA;AACA;AACA;AACA,iBAAiB,8CAAO;AACxB,0BAA0B,iFAAgB;AAC1C;AACA;AACA;AACA,2CAA2C,sDAAG,CAAC,0DAAS,IAAI,iBAAiB;AAC7E;AACA;AACA;AACA,4BAA4B,mDAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,uDAAI,CAAC,2CAAQ,IAAI;AAC9C;AACA;AACA,SAAS;AACT,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,2DAAE;AACvB,yBAAyB,sDAAG;AAC5B,IAAI,qDAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAIE;AACF;;;;;;;;;;;;;;;ACzFA;AACiD;AACjD;AACA,SAAS,2CAAQ;AACjB,eAAe,qDAAc;AAC7B;AACA;AAGE","sources":["webpack://MkitFPdf/./src/ui/app/Layout.tsx","webpack://MkitFPdf/./node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs","webpack://MkitFPdf/./node_modules/@chakra-ui/layout/dist/chunk-3ASUQ6PA.mjs","webpack://MkitFPdf/./node_modules/@chakra-ui/layout/dist/chunk-5VJV6UNA.mjs","webpack://MkitFPdf/./node_modules/@chakra-ui/layout/dist/chunk-BL2ZZSHG.mjs","webpack://MkitFPdf/./node_modules/@chakra-ui/layout/dist/chunk-NTCQBYKE.mjs","webpack://MkitFPdf/./node_modules/@chakra-ui/layout/dist/chunk-ZFQCCYWD.mjs","webpack://MkitFPdf/./node_modules/@chakra-ui/layout/dist/chunk-ZHMYA64R.mjs","webpack://MkitFPdf/./node_modules/@chakra-ui/react-children-utils/dist/index.mjs"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { lazy } from 'react';\nimport { HStack, Spacer, VStack } from '@chakra-ui/react';\nconst Messages = lazy(() => import('./components/Panels/Messages'));\nconst PanelFrame = lazy(() => import('./components/PanelFrame'));\nconst MainMenu = lazy(() => import('./components/Menu'));\nconst Layout = () => {\n    return (_jsxs(VStack, { h: \"100vh\", align: \"stretch\", spacing: 0, children: [_jsx(Messages, {}), _jsxs(HStack, { p: 1, borderBottomWidth: 1, minH: '45px', children: [_jsx(Spacer, {}), _jsx(MainMenu, {})] }), _jsx(PanelFrame, {})] }));\n};\nexport default Layout;\n","// src/responsive.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nvar breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nvar isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport {\n  breakpoints,\n  mapResponsive,\n  objectToArrayNotation,\n  arrayToObjectNotation,\n  isResponsiveObjectLike,\n  isCustomBreakpoint\n};\n","'use client'\nimport {\n  Stack\n} from \"./chunk-ZHMYA64R.mjs\";\n\n// src/stack/h-stack.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar HStack = forwardRef((props, ref) => /* @__PURE__ */ jsx(Stack, { align: \"center\", ...props, direction: \"row\", ref }));\nHStack.displayName = \"HStack\";\n\nexport {\n  HStack\n};\n//# sourceMappingURL=chunk-3ASUQ6PA.mjs.map","'use client'\n\n// src/stack/stack.utils.tsx\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nfunction getDividerStyles(options) {\n  const { spacing, direction } = options;\n  const dividerStyles = {\n    column: {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    \"column-reverse\": {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    row: {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    },\n    \"row-reverse\": {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    }\n  };\n  return {\n    \"&\": mapResponsive(\n      direction,\n      (value) => dividerStyles[value]\n    )\n  };\n}\n\nexport {\n  getDividerStyles\n};\n//# sourceMappingURL=chunk-5VJV6UNA.mjs.map","'use client'\n\n// src/spacer.tsx\nimport { chakra } from \"@chakra-ui/system\";\nvar Spacer = chakra(\"div\", {\n  baseStyle: {\n    flex: 1,\n    justifySelf: \"stretch\",\n    alignSelf: \"stretch\"\n  }\n});\nSpacer.displayName = \"Spacer\";\n\nexport {\n  Spacer\n};\n//# sourceMappingURL=chunk-BL2ZZSHG.mjs.map","'use client'\nimport {\n  Stack\n} from \"./chunk-ZHMYA64R.mjs\";\n\n// src/stack/v-stack.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar VStack = forwardRef((props, ref) => /* @__PURE__ */ jsx(Stack, { align: \"center\", ...props, direction: \"column\", ref }));\nVStack.displayName = \"VStack\";\n\nexport {\n  VStack\n};\n//# sourceMappingURL=chunk-NTCQBYKE.mjs.map","'use client'\n\n// src/stack/stack-item.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StackItem = (props) => /* @__PURE__ */ jsx(\n  chakra.div,\n  {\n    className: \"chakra-stack__item\",\n    ...props,\n    __css: {\n      display: \"inline-block\",\n      flex: \"0 0 auto\",\n      minWidth: 0,\n      ...props[\"__css\"]\n    }\n  }\n);\nStackItem.displayName = \"StackItem\";\n\nexport {\n  StackItem\n};\n//# sourceMappingURL=chunk-ZFQCCYWD.mjs.map","'use client'\nimport {\n  StackItem\n} from \"./chunk-ZFQCCYWD.mjs\";\nimport {\n  getDividerStyles\n} from \"./chunk-5VJV6UNA.mjs\";\n\n// src/stack/stack.tsx\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cloneElement, Fragment, useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Stack = forwardRef((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const direction = isInline ? \"row\" : directionProp != null ? directionProp : \"column\";\n  const dividerStyle = useMemo(\n    () => getDividerStyles({ spacing, direction }),\n    [spacing, direction]\n  );\n  const hasDivider = !!divider;\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider;\n  const clones = useMemo(() => {\n    const validChildren = getValidChildren(children);\n    return shouldUseChildren ? validChildren : validChildren.map((child, index) => {\n      const key = typeof child.key !== \"undefined\" ? child.key : index;\n      const isLast = index + 1 === validChildren.length;\n      const wrappedChild = /* @__PURE__ */ jsx(StackItem, { children: child }, key);\n      const _child = shouldWrapChildren ? wrappedChild : child;\n      if (!hasDivider)\n        return _child;\n      const clonedDivider = cloneElement(\n        divider,\n        {\n          __css: dividerStyle\n        }\n      );\n      const _divider = isLast ? null : clonedDivider;\n      return /* @__PURE__ */ jsxs(Fragment, { children: [\n        _child,\n        _divider\n      ] }, key);\n    });\n  }, [\n    divider,\n    dividerStyle,\n    hasDivider,\n    shouldUseChildren,\n    shouldWrapChildren,\n    children\n  ]);\n  const _className = cx(\"chakra-stack\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      display: \"flex\",\n      alignItems: align,\n      justifyContent: justify,\n      flexDirection: direction,\n      flexWrap: wrap,\n      gap: hasDivider ? void 0 : spacing,\n      className: _className,\n      ...rest,\n      children: clones\n    }\n  );\n});\nStack.displayName = \"Stack\";\n\nexport {\n  Stack\n};\n//# sourceMappingURL=chunk-ZHMYA64R.mjs.map","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n"],"names":[],"sourceRoot":""}